{"version":3,"sources":["components/TawkTo.tsx","components/TopBar/TopBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["isApiReady","waitingForReady","run","cb","push","useStatus","useState","status","setStatus","useEffect","intervalRef","setInterval","Tawk_API","getStatus","clearInterval","logEvent","eventName","data","window","addEvent","TawkTo","props","Tawk_LoadStart","Date","onLoad","forEach","s1","document","createElement","s0","getElementsByTagName","async","src","propertyId","apiKey","charset","setAttribute","parentNode","insertBefore","className","Topbar","Navbar","sticky","bg","variant","to","NavbarBrand","Nav","exact","Link","HomePage","lazy","OrderPage","ContactPage","App","Container","Suspense","fallback","Spinner","animation","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uPAOIA,GAAa,EACXC,EAAkC,GAExC,SAASC,EAAIC,GACPH,EACFG,IAGAF,EAAgBG,KAAKD,GAIlB,SAASE,IAAa,IAAD,EACEC,mBAAwC,WAD1C,mBACnBC,EADmB,KACXC,EADW,KAgB1B,OAbAC,qBAAU,WACR,IAAIC,EAOJ,OANAR,GAAI,WACFQ,EAAcC,aAAY,WACxBH,EAAUI,SAASC,eAClB,QAGE,WACLC,cAAcJ,OAIXH,EAGF,SAASQ,EAASC,EAAmBC,GAC1Cf,GAAI,WACFgB,OAAON,SAASO,SAASH,EAAWC,MAIjC,SAASG,EAAOC,GAqBrB,OAjBAZ,qBAAU,WACRS,OAAON,SAAWM,OAAON,UAAY,GACrCM,OAAOI,eAAiB,IAAIC,KAC5BL,OAAON,SAASY,OAAS,WACvBxB,GAAa,EACbC,EAAgBwB,SAAQ,SAAAtB,GAAE,OAAIA,QAGhC,IAAIuB,EAAKC,SAASC,cAAc,UAAWC,EAAKF,SAASG,qBAAqB,UAAU,GACxFJ,EAAGK,OAAQ,EACXL,EAAGM,IAAM,yBAA2BX,EAAMY,WAAa,IAAMZ,EAAMa,OACnER,EAAGS,QAAU,QACbT,EAAGU,aAAa,cAAe,KAC3BP,EAAGQ,YACLR,EAAGQ,WAAWC,aAAaZ,EAAIG,MAG5B,qBAAKU,UAAU,a,4MCtCTC,MAtBf,WACE,OACE,eAACC,EAAA,EAAD,CAAQF,UAAU,kBAAkBG,OAAO,MAAMC,GAAG,QAAQC,QAAQ,QAApE,UACE,cAAC,gBAAD,CAAeC,GAAG,IAAlB,SACE,cAACC,EAAA,EAAD,wBAGF,eAACC,EAAA,EAAD,CAAKR,UAAU,UAAf,UACE,cAAC,gBAAD,CAAeS,OAAK,EAACH,GAAG,IAAxB,SACE,cAACE,EAAA,EAAIE,KAAL,wBAEF,cAAC,gBAAD,CAAeJ,GAAG,YAAlB,SACE,cAACE,EAAA,EAAIE,KAAL,yBAEF,cAAC,gBAAD,CAAeD,OAAK,EAACH,GAAG,WAAxB,SACE,cAACE,EAAA,EAAIE,KAAL,+B,QCdJC,EAAWC,gBAAK,kBAAM,gCACtBC,EAAYD,gBAAK,kBAAM,sDACvBE,EAAcF,gBAAK,kBAAM,sDA4BhBG,MA1Bf,WACE,OACE,eAACC,EAAA,EAAD,CAAWhB,UAAU,MAArB,UACE,eAAC,aAAD,WACE,cAAC,EAAD,IACA,qBAAKA,UAAU,gBAAf,SACE,cAAC,IAAMiB,SAAP,CAAgBC,SAAU,cAACC,EAAA,EAAD,CAASnB,UAAU,eAAeoB,UAAU,SAASf,QAAQ,cAAvF,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOI,OAAK,EAACY,KAAK,IAAlB,SACE,cAACV,EAAD,MAEF,cAAC,IAAD,CAAOU,KAAK,YAAZ,SACE,cAACR,EAAD,MAEF,cAAC,IAAD,CAAOJ,OAAK,EAACY,KAAK,WAAlB,SACE,cAACP,EAAD,gBAMV,cAACjC,EAAA,EAAD,CAAQa,WAAW,2BAA2BC,OAAO,kBCjB5C2B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7C,SAAS8C,eAAe,SAM1BZ,M","file":"static/js/main.ac853fa8.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\ndeclare global {\r\n  var Tawk_API: any;\r\n  var Tawk_LoadStart: Date\r\n}\r\n\r\nlet isApiReady = false;\r\nconst waitingForReady: (() => void)[] = [];\r\n\r\nfunction run(cb: () => void): void {\r\n  if (isApiReady) {\r\n    cb();\r\n  }\r\n  else {\r\n    waitingForReady.push(cb);\r\n  }\r\n}\r\n\r\nexport function useStatus() {\r\n  const [status, setStatus] = useState<'online' | 'away' | 'offline'>('offline');\r\n\r\n  useEffect(() => {\r\n    let intervalRef: NodeJS.Timeout;\r\n    run(() => {\r\n      intervalRef = setInterval(() => {\r\n        setStatus(Tawk_API.getStatus());\r\n      }, 250);\r\n    });\r\n\r\n    return () => {\r\n      clearInterval(intervalRef);\r\n    };\r\n  });\r\n\r\n  return status;\r\n}\r\n\r\nexport function logEvent(eventName: string, data?: { [key: string]: string | number }): void {\r\n  run(() => {\r\n    window.Tawk_API.addEvent(eventName, data);\r\n  });\r\n}\r\n\r\nexport function TawkTo(props: {\r\n  propertyId: string,\r\n  apiKey: string\r\n}) {\r\n  useEffect(() => {\r\n    window.Tawk_API = window.Tawk_API || {};\r\n    window.Tawk_LoadStart = new Date();\r\n    window.Tawk_API.onLoad = function () {\r\n      isApiReady = true;\r\n      waitingForReady.forEach(cb => cb());\r\n    };\r\n\r\n    var s1 = document.createElement(\"script\"), s0 = document.getElementsByTagName(\"script\")[0];\r\n    s1.async = true;\r\n    s1.src = 'https://embed.tawk.to/' + props.propertyId + '/' + props.apiKey;\r\n    s1.charset = 'UTF-8';\r\n    s1.setAttribute('crossorigin', '*');\r\n    if (s0.parentNode)\r\n      s0.parentNode.insertBefore(s1, s0);\r\n  });\r\n\r\n  return <div className=\"tawkTo\" />;\r\n}","import React from 'react';\r\nimport { Navbar, NavbarBrand, Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport './TopBar.scss';\r\n\r\nfunction Topbar() {\r\n  return (\r\n    <Navbar className=\"topBarComponent\" sticky=\"top\" bg=\"light\" variant=\"light\">\r\n      <LinkContainer to=\"/\">\r\n        <NavbarBrand>ViPi 3D</NavbarBrand>\r\n      </LinkContainer>\r\n      \r\n      <Nav className=\"ml-auto\">\r\n        <LinkContainer exact to=\"/\">\r\n          <Nav.Link>Accueil</Nav.Link>\r\n        </LinkContainer>\r\n        <LinkContainer to=\"/produits\">\r\n          <Nav.Link>Produits</Nav.Link>\r\n        </LinkContainer>\r\n        <LinkContainer exact to=\"/contact\">\r\n          <Nav.Link>Contact</Nav.Link>\r\n        </LinkContainer>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Topbar;\r\n","import React, { lazy } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Spinner } from 'react-bootstrap';\nimport Container from 'react-bootstrap/Container';\nimport TopBar from './components/TopBar/TopBar';\nimport { TawkTo } from './components/TawkTo';\nconst HomePage = lazy(() => import('./pages/home/HomePage'));\nconst OrderPage = lazy(() => import('./pages/products/ProductsPage'));\nconst ContactPage = lazy(() => import('./pages/contact/ContactPage'));\n\nfunction App() {\n  return (\n    <Container className=\"app\">\n      <Router>\n        <TopBar />\n        <div className=\"pageContainer\">\n          <React.Suspense fallback={<Spinner className=\"routerLoader\" animation=\"border\" variant=\"secondary\" />}>\n            <Switch>\n              <Route exact path=\"/\">\n                <HomePage />\n              </Route>\n              <Route path=\"/produits\">\n                <OrderPage />\n              </Route>\n              <Route exact path=\"/contact\">\n                <ContactPage />\n              </Route>\n            </Switch>\n          </React.Suspense>\n        </div>\n      </Router>\n      <TawkTo propertyId=\"60c1f8b565b7290ac6353627\" apiKey=\"1f7qr719r\" />\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}