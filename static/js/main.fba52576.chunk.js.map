{"version":3,"sources":["components/TawkTo.tsx","components/TopBar/TopBar.tsx","pages/home/HomePage.tsx","components/Optionnal.tsx","utils/FormSubmit.ts","pages/products/racks/steps/StepGeneric.tsx","pages/products/racks/steps/StepValueTile.tsx","pages/products/racks/steps/StepMachine.tsx","pages/products/racks/steps/StepCapacity.tsx","pages/products/racks/steps/StepColor.tsx","pages/products/racks/steps/StepPrice.tsx","pages/products/racks/ConfigureRack.tsx","pages/products/racks/steps/StepShipping.tsx","pages/products/racks/steps/StepPayment.tsx","pages/products/racks/steps/StepCustomerInformations.tsx","pages/products/racks/ConfigureShippingPayment.tsx","pages/products/racks/Racks.tsx","pages/products/ProductsPage.tsx","pages/contact/ContactPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["isApiReady","waitingForReady","run","cb","push","logEvent","eventName","data","window","Tawk_API","addEvent","TawkTo","props","useEffect","Tawk_LoadStart","Date","onLoad","forEach","s1","document","createElement","s0","getElementsByTagName","async","src","propertyId","apiKey","charset","setAttribute","parentNode","insertBefore","className","Topbar","Navbar","sticky","bg","variant","to","NavbarBrand","Nav","exact","Link","HomePage","Container","Row","Col","md","Image","thumbnail","alt","Button","Optionnal","displayed","children","useFormSubmit","subject","destinationEmail","useState","succeeded","error","submitting","formState","setFormState","sendMail","fetch","method","headers","body","JSON","stringify","_subject","then","catch","handleSubmit","event","preventDefault","formData","FormData","target","value","key","Reflect","has","Array","isArray","toString","StepGeneric","stepClassName","expanded","onClick","onSelected","introLabel","typeLabel","title","valueLabel","undefined","priceLabel","StepValueTile","label","onSelect","price","MACHINES","Map","picture","StepMachine","setValue","selectValue","onChange","onNext","machine","get","from","val","CAPACITIES","StepCapacity","getPriceLabel","valueKey","COLORS","StepColor","StepPrice","total","getPartNumber","config","capacity","color","validConfiguration","getTotalPrice","Object","values","reduce","p","c","ConfigureRack","stepIndex","setStepIndex","product","setProduct","updateProduct","attribute","newProduct","disabled","onAdd","ShippingModesByCountries","modes","none","mrelay_fr","laposte_fr","mrelay_be","laposte_be","mrelay_lu","laposte_lu","mrelay_de","laposte_de","mrelay_at","laposte_at","mrelay_es","laposte_es","mrelay_it","laposte_it","mrelay_nl","laposte_nl","mrelay_pt","laposte_pt","StepShipping","country","setCountry","mode","setMode","availableModes","countryObj","modeObj","Form","inline","InputGroup","Prepend","Text","Control","as","firstModeKey","keys","selectCountry","map","countryCode","shippingModes","selectMode","entries","id","PaymentModes","details","StepPayment","getValueLabel","ToggleButtonGroup","type","name","ToggleButton","StepCustomerInformations","firstName","email","customerInformations","setCustomerInformations","onSubmit","onUserChange","placeholder","basketTotal","basketCount","conf","shipping","payment","customer","fixAmount","paymentMultiplier","Math","round","ConfigureShippingPayment","setConfig","updateConfig","newConfig","Racks","products","setProducts","shippingPayment","setShippingPayment","orderState","sendOrder","onAddProduct","getProductsPrice","getRackPrice","Alert","index","newProducts","nbProducts","length","basket","join","totalProduct","onProductChange","some","prod","filter","totalPrice","size","block","Spinner","animation","role","aria-hidden","ProductsPage","path","useRouteMatch","ContactPage","chatStatus","status","setStatus","intervalRef","setInterval","getStatus","clearInterval","useStatus","state","Group","rows","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fba52576.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\ndeclare global {\r\n  var Tawk_API: any;\r\n  var Tawk_LoadStart: Date\r\n}\r\n\r\nlet isApiReady = false;\r\nconst waitingForReady: (() => void)[] = [];\r\n\r\nfunction run(cb: () => void): void {\r\n  if (isApiReady) {\r\n    cb();\r\n  }\r\n  else {\r\n    waitingForReady.push(cb);\r\n  }\r\n}\r\n\r\nexport function useStatus() {\r\n  const [status, setStatus] = useState<'online' | 'away' | 'offline'>('offline');\r\n\r\n  useEffect(() => {\r\n    let intervalRef: NodeJS.Timeout;\r\n    run(() => {\r\n      intervalRef = setInterval(() => {\r\n        setStatus(Tawk_API.getStatus());\r\n      }, 250);\r\n    });\r\n\r\n    return () => {\r\n      clearInterval(intervalRef);\r\n    };\r\n  });\r\n\r\n  return status;\r\n}\r\n\r\nexport function logEvent(eventName: string, data?: { [key: string]: string | number }): void {\r\n  run(() => {\r\n    window.Tawk_API.addEvent(eventName, data);\r\n  });\r\n}\r\n\r\nexport function TawkTo(props: {\r\n  propertyId: string,\r\n  apiKey: string\r\n}) {\r\n  useEffect(() => {\r\n    window.Tawk_API = window.Tawk_API || {};\r\n    window.Tawk_LoadStart = new Date();\r\n    window.Tawk_API.onLoad = function () {\r\n      isApiReady = true;\r\n      waitingForReady.forEach(cb => cb());\r\n    };\r\n\r\n    var s1 = document.createElement(\"script\"), s0 = document.getElementsByTagName(\"script\")[0];\r\n    s1.async = true;\r\n    s1.src = 'https://embed.tawk.to/' + props.propertyId + '/' + props.apiKey;\r\n    s1.charset = 'UTF-8';\r\n    s1.setAttribute('crossorigin', '*');\r\n    if (s0.parentNode)\r\n      s0.parentNode.insertBefore(s1, s0);\r\n  });\r\n\r\n  return <div className=\"tawkTo\" />;\r\n}","import React from 'react';\r\nimport { Navbar, NavbarBrand, Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport './TopBar.scss';\r\n\r\nfunction Topbar() {\r\n  return (\r\n    <Navbar className=\"topBarComponent\" sticky=\"top\" bg=\"light\" variant=\"light\">\r\n      <LinkContainer to=\"/\">\r\n        <NavbarBrand>ViPi 3D</NavbarBrand>\r\n      </LinkContainer>\r\n      \r\n      <Nav className=\"ml-auto\">\r\n        <LinkContainer exact to=\"/\">\r\n          <Nav.Link>Accueil</Nav.Link>\r\n        </LinkContainer>\r\n        <LinkContainer to=\"/produits\">\r\n          <Nav.Link>Produits</Nav.Link>\r\n        </LinkContainer>\r\n        <LinkContainer exact to=\"/contact\">\r\n          <Nav.Link>Contact</Nav.Link>\r\n        </LinkContainer>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Topbar;\r\n","import React from 'react';\r\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport './HomePage.scss';\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <Container className=\"page home\">\r\n      <Row className=\"about-us mt-5\">\r\n        <Col md={12} className=\"section-heading text-center\">\r\n          <h2>À propos de nous</h2>\r\n          <h3 className=\"my-5 mx-auto\">Passionné par le fait-main, nous concevons des objets pour la maison, souvent fabriqués à l'aide d'une imprimante 3D.</h3>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={7}>\r\n          <Image src=\"img/intro.jpg\" thumbnail alt=\"Support Philips Pasta Maker Avance 32 filières\" />\r\n        </Col>\r\n        <Col md={5} className=\"d-flex flex-column mt-4\">\r\n          <h2>Les supports pour filières</h2>\r\n          <p>Notre plus grand succès aujourd'hui: un support pour filières pour machines à pâtes.</p>\r\n          <p>Il est disponible pour les machines <strong>Philips Pasta Maker Avance</strong> et <strong>Philips Pasta Maker Viva</strong>, en plusieurs capacités et en plusieurs couleurs.</p>\r\n          <p>De nouveaux modèles sont en préparation, restez à l'écoute !</p>\r\n          <p className=\"order align-self-center flex-fill d-flex my-3\">\r\n            <LinkContainer to=\"/produits\">\r\n              <Button className=\"align-self-center px-5\" variant=\"primary\">Commander</Button>\r\n            </LinkContainer>\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\n\r\nexport interface OptionnalProps {\r\n  displayed: boolean\r\n}\r\n\r\nexport function Optionnal(props: React.PropsWithChildren<OptionnalProps>): JSX.Element {\r\n  return (\r\n    <>\r\n      {props.displayed ? props.children : null}\r\n    </>\r\n  );\r\n}","import { useState } from 'react';\r\n\r\ninterface FormSubmitState {\r\n  succeeded: boolean,\r\n  error: string,\r\n  submitting: boolean\r\n}\r\n\r\nexport function useFormSubmit(subject: string, destinationEmail: string = 'f4b1f3525078ed28a2659dbb69c5a942'): [FormSubmitState, (e: React.FormEvent<HTMLFormElement>) => void, (data: object) => void] {\r\n  const [formState, setFormState] = useState<FormSubmitState>({\r\n    succeeded: false,\r\n    error: '',\r\n    submitting: false\r\n  });\r\n\r\n  function sendMail(data: object): void {\r\n    setFormState({ ...formState, submitting: true });\r\n\r\n    fetch('https://formsubmit.co/ajax/' + destinationEmail, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      },\r\n      body: JSON.stringify({ ...data, _subject: subject })\r\n    }).then(() => {\r\n      setFormState({ ...formState, succeeded: true, submitting: false });\r\n    }).catch(error => {\r\n      setFormState({ ...formState, error: error, submitting: false });\r\n    });\r\n  }\r\n\r\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\r\n    event.preventDefault();\r\n\r\n    const formData = new FormData(event.target as HTMLFormElement);\r\n\r\n    let data: Record<string, string | string[]> = {};\r\n    formData.forEach((value, key) => {\r\n      if (!Reflect.has(data, key)) {\r\n        data[key] = value.toString();\r\n        return;\r\n      }\r\n      if (!Array.isArray(data[key])) {\r\n        data[key] = [data[key] as string];\r\n      }\r\n      (data[key] as string[]).push(value.toString());\r\n    });\r\n\r\n    sendMail(data);\r\n  }\r\n\r\n  return [formState, handleSubmit, sendMail];\r\n}","import React from 'react';\r\nimport { Optionnal } from '../../../../components/Optionnal';\r\n\r\nexport interface MinimunStepGenericProps {\r\n  displayed?: boolean,\r\n  expanded: boolean,\r\n  onSelected?: () => void,\r\n  onNext?: () => void\r\n}\r\n\r\ninterface StepGenericProps extends MinimunStepGenericProps {\r\n  stepClassName: string\r\n  typeLabel: string\r\n  introLabel: string\r\n  valueLabel: () => string\r\n  priceLabel?: () => string\r\n  onChange?: (value: [val: string, price: number]) => void\r\n}\r\n\r\nexport function StepGeneric(props: React.PropsWithChildren<StepGenericProps>) {\r\n  return (\r\n    <Optionnal displayed={props.displayed !== false}>\r\n      <div className={'step ' + props.stepClassName + ' border border-info ' + (props.expanded ? 'expanded' : 'collapsed bg-light')}>\r\n        <div className={'header d-flex py-2 px-2 ' + (props.expanded ? '' : 'bg-light')} onClick={props.onSelected}>\r\n          <span className=\"type\">{props.expanded ? props.introLabel : props.typeLabel + ' :'}</span>&nbsp;\r\n          <span className=\"value text-truncate text-muted\" title={props.expanded ? '' : props.valueLabel()}>{props.expanded ? '' : props.valueLabel()}</span>\r\n          <Optionnal displayed={!props.expanded && props.priceLabel !== undefined}><span className=\"price\">{props.priceLabel ? props.priceLabel() : ''}</span></Optionnal>\r\n        </div>\r\n        <Optionnal displayed={props.expanded}>\r\n          <div className=\"content border-top border-info p-2\">\r\n            {props.children}\r\n          </div>\r\n        </Optionnal>\r\n      </div>\r\n    </Optionnal>\r\n  );\r\n}","import React from 'react';\r\nimport { Image } from 'react-bootstrap';\r\nimport { Optionnal } from '../../../../components/Optionnal';\r\n\r\nexport interface StepValueTileProps {\r\n  label?: string\r\n  value: string\r\n  src: string\r\n  price?: string\r\n  onSelect: (value: string) => void\r\n}\r\n\r\nexport function StepValueTile(props: StepValueTileProps) {\r\n  const label = '' + (props.label || props.value);\r\n  return (\r\n    <figure className=\"figure\" onClick={() => props.onSelect(props.value)}>\r\n      <Image src={props.src} thumbnail alt={label} />\r\n      <Optionnal displayed={props.price !== undefined && props.price !== ''}><span className=\"price\">{props.price}</span></Optionnal>\r\n      <figcaption className=\"figure-caption\">{label}</figcaption>\r\n    </figure>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { MinimunStepGenericProps, StepGeneric } from './StepGeneric';\r\nimport { StepValueTile } from './StepValueTile';\r\n\r\nconst MACHINES = new Map<string, { label: string, picture: string }>([\r\n  ['avance', { label: 'Philips Pasta Maker Avance', picture: 'machine-avance.jpg' }],\r\n  ['viva', { label: 'Philips Pasta Maker Viva', picture: 'machine-viva.png' }],\r\n]);\r\n\r\ninterface StepMachineProps extends MinimunStepGenericProps {\r\n  onChange?: (value: [val: string, price: number]) => void\r\n}\r\n\r\nexport function StepMachine(props: StepMachineProps) {\r\n  const [value, setValue] = useState<string>('');\r\n\r\n  function selectValue(value: string): void {\r\n    setValue(value);\r\n    if (props.onChange)\r\n      props.onChange([value, 0]);\r\n    if (props.onNext)\r\n      props.onNext();\r\n  }\r\n\r\n  function getValueLabel(): string {\r\n    const machine = MACHINES.get(value);\r\n    return machine ? machine.label : '';\r\n  }\r\n\r\n  return (\r\n    <StepGeneric {...props} stepClassName='machine' typeLabel='Machine' introLabel='Machine utilisée' valueLabel={getValueLabel}>\r\n      {Array.from(MACHINES, ([key, val]) =>\r\n        <StepValueTile src={'img/racks/' + val.picture} label={val.label} value={key} onSelect={selectValue} key={'machine-' + key} />\r\n      )}\r\n    </StepGeneric>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { MinimunStepGenericProps, StepGeneric } from './StepGeneric';\r\nimport { StepValueTile } from './StepValueTile';\r\n\r\n\r\nconst CAPACITIES = new Map<string, { price: number }>([\r\n  ['16', { price: 18 }],\r\n  ['24', { price: 24 }],\r\n  ['32', { price: 32 }]\r\n]);\r\n\r\ninterface StepCapacityProps extends MinimunStepGenericProps {\r\n  onChange?: (value: [val: string, price: number]) => void\r\n}\r\n\r\nexport function StepCapacity(props: StepCapacityProps) {\r\n  const [value, setValue] = useState<string>('');\r\n\r\n  function selectValue(value: string): void {\r\n    const val = CAPACITIES.get(value);\r\n    if (!val) return;\r\n    \r\n    setValue(value);\r\n    if (props.onChange)\r\n      props.onChange([value, val.price]);\r\n    if (props.onNext)\r\n      props.onNext();\r\n  }\r\n\r\n  function getValueLabel(): string {\r\n    return value + ' filières';\r\n  }\r\n\r\n  function getPriceLabel(valueKey: string = value): string {\r\n    const val = CAPACITIES.get(valueKey);\r\n    return val ? val.price + '€' : '';\r\n  }\r\n\r\n  return (\r\n    <StepGeneric {...props} stepClassName='capacity' typeLabel='Capacité' introLabel='Capacité du support' valueLabel={getValueLabel} priceLabel={getPriceLabel}>\r\n      {Array.from(CAPACITIES, ([key, val]) =>\r\n        <StepValueTile src={'img/racks/capacity-' + key + '.png'} value={key} label={key + ' filières'} price={getPriceLabel(key)} onSelect={selectValue} key={'cap' + key} />\r\n      )}\r\n    </StepGeneric>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { MinimunStepGenericProps, StepGeneric } from './StepGeneric';\r\nimport { StepValueTile } from './StepValueTile';\r\n\r\nconst COLORS = new Map<string, { label: string, price: number }>([\r\n  ['white', { label: 'Blanc', price: 0 }],\r\n  ['black', { label: 'Noir', price: 1 }],\r\n  ['nightblue', { label: 'Bleu nuit', price: 1 }],\r\n  ['grey', { label: 'Gris', price: 1 }],\r\n  ['red', { label: 'Rouge', price: 1 }],\r\n  ['skyblue', { label: 'Bleu ciel', price: 2 }],\r\n  ['turquoiseblue', { label: 'Turquoise', price: 2 }],\r\n  ['bronze', { label: 'Bronze', price: 3 }],\r\n  ['pastelblue', { label: 'Bleu pastel', price: 3.5 }],\r\n  ['pastelgreen', { label: 'Vert pastel', price: 3.5 }],\r\n  ['pastelpink', { label: 'Rose pastel', price: 3.5 }]\r\n]);\r\n\r\ninterface StepColorProps extends MinimunStepGenericProps {\r\n  onChange?: (value: [val: string, price: number]) => void\r\n}\r\n\r\nexport function StepColor(props: StepColorProps) {\r\n  const [value, setValue] = useState<string>('');\r\n\r\n  function selectValue(value: string): void {\r\n    const val = COLORS.get(value);\r\n    if (!val) return;\r\n\r\n    setValue(value);\r\n    if (props.onChange)\r\n      props.onChange([value, val.price]);\r\n    if (props.onNext)\r\n      props.onNext();\r\n  }\r\n\r\n  function getValueLabel(): string {\r\n    return '' + COLORS.get(value)?.label;\r\n  }\r\n\r\n  function getPriceLabel(valueKey: string = value): string {\r\n    const val = COLORS.get(valueKey);\r\n    return val && val.price > 0 ? '+' + val.price + '€' : '';\r\n  }\r\n\r\n  return (\r\n    <StepGeneric {...props} stepClassName='color' typeLabel='Couleur' introLabel='Couleur du support' valueLabel={getValueLabel} priceLabel={getPriceLabel}>\r\n      {Array.from(COLORS, ([key, val]) =>\r\n        <StepValueTile src={'img/racks/color-' + key + '.png'} label={val.label} price={getPriceLabel(key)} value={key} onSelect={selectValue} key={'col' + key} />\r\n      )}\r\n    </StepGeneric>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { StepGeneric } from './StepGeneric';\r\n\r\ninterface StepPriceProps {\r\n  displayed?: boolean\r\n  total: number\r\n}\r\n\r\nexport function StepPrice(props: StepPriceProps) {\r\n  return (\r\n    <StepGeneric displayed={props.displayed} expanded={false} stepClassName='price' typeLabel='Total' introLabel='' valueLabel={() => props.total + '€'}></StepGeneric>\r\n  );\r\n}\r\n","\r\nimport React, { useState } from 'react';\r\nimport { Optionnal } from '../../../components/Optionnal';\r\nimport { StepMachine } from './steps/StepMachine';\r\nimport { StepCapacity } from './steps/StepCapacity';\r\nimport { StepColor } from './steps/StepColor';\r\nimport { StepPrice } from './steps/StepPrice';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport interface RackConfiguration {\r\n  machine: [string, number],\r\n  capacity: [string, number],\r\n  color: [string, number]\r\n}\r\n\r\nexport function getNewConfiguration(): RackConfiguration {\r\n  return {\r\n    machine: ['', 0],\r\n    capacity: ['', 0],\r\n    color: ['', 0],\r\n  };\r\n}\r\n\r\nexport function getPartNumber(config: RackConfiguration): string {\r\n  return config.machine[0] + '-' + config.capacity[0] + '-' + config.color[0];\r\n}\r\n\r\nexport function validConfiguration(config: RackConfiguration): boolean {\r\n  return config.machine[0] !== '' && config.capacity[0] !== '' && config.color[0] !== '';\r\n}\r\n\r\nexport function getTotalPrice(config: RackConfiguration): number {\r\n  return Object.values(config).reduce((p, c) => p + c[1], 0);\r\n}\r\n\r\nexport function ConfigureRack(props: {\r\n  onChange: (conf: RackConfiguration) => void\r\n  onAdd?: () => void\r\n  disabled?: boolean\r\n}) {\r\n  const [stepIndex, setStepIndex] = useState(0);\r\n  const [product, setProduct] = useState<RackConfiguration>(getNewConfiguration());\r\n\r\n  function updateProduct(attribute: keyof RackConfiguration, value: [string, number]) {\r\n    const newProduct = { ...product, [attribute]: value };\r\n    setProduct(newProduct);\r\n    props.onChange(newProduct);\r\n  }\r\n\r\n  return (\r\n    <div className=\"configureRack clearfix\">\r\n      <div className=\"myAccordion w-100 border border-info\">\r\n        <StepMachine expanded={stepIndex === 0} onSelected={() => props.disabled || setStepIndex(0)} onNext={() => props.disabled || setStepIndex(1)} onChange={val => updateProduct('machine', val)} />\r\n        <StepCapacity displayed={stepIndex >= 1} expanded={stepIndex === 1} onSelected={() => props.disabled || setStepIndex(1)} onNext={() => props.disabled || setStepIndex(2)} onChange={val => updateProduct('capacity', val)} />\r\n        <StepColor displayed={stepIndex >= 2} expanded={stepIndex === 2} onSelected={() => props.disabled || setStepIndex(2)} onNext={() => props.disabled || setStepIndex(3)} onChange={val => updateProduct('color', val)} />\r\n        <StepPrice displayed={stepIndex === 3} total={getTotalPrice(product)} />\r\n      </div>\r\n      <Optionnal displayed={stepIndex === 3 && props.onAdd !== undefined}><Button className=\"my-2 float-right\" variant=\"primary\" onClick={props.onAdd} disabled={props.disabled}>Ajouter un autre support à ma commande</Button></Optionnal>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { Form, InputGroup } from 'react-bootstrap';\r\nimport { MinimunStepGenericProps, StepGeneric } from './StepGeneric';\r\n\r\ninterface ShippingMode {\r\n  label: string,\r\n  price: number\r\n}\r\n\r\nconst ShippingModesByCountries = new Map<string, { label: string, modes: { [id: string]: ShippingMode } }>([\r\n  ['fr', {\r\n    label: 'France', modes: {\r\n      none: { label: 'En main propre à Gentilly (94250)', price: 0 },\r\n      mrelay_fr: { label: 'Mondial Relay', price: 5.5 },\r\n      laposte_fr: { label: 'Colissimo - Livraison en 2 jours', price: 9 }\r\n    }\r\n  }],\r\n  ['be', {\r\n    label: 'Belgique', modes: {\r\n      mrelay_be: { label: 'Mondial Relay ', price: 5.5 },\r\n      laposte_be: { label: 'Colissimo International', price: 17 }\r\n    }\r\n  }],\r\n  ['lu', {\r\n    label: 'Luxembourg', modes: {\r\n      mrelay_lu: { label: 'Mondial Relay', price: 6 },\r\n      laposte_lu: { label: 'Colissimo International', price: 17 }\r\n    }\r\n  }],\r\n  ['de', {\r\n    label: 'Allemagne', modes: {\r\n      mrelay_de: { label: 'Mondial Relay', price: 10.5 },\r\n      laposte_de: { label: 'Colissimo International', price: 17 }\r\n    }\r\n  }],\r\n  ['at', {\r\n    label: 'Autriche', modes: {\r\n      mrelay_at: { label: 'Mondial Relay', price: 12 },\r\n      laposte_at: { label: 'Colissimo International', price: 17 }\r\n    }\r\n  }],\r\n  ['es', {\r\n    label: 'Espagne', modes: {\r\n      mrelay_es: { label: 'Mondial Relay', price: 8 },\r\n      laposte_es: { label: 'Colissimo International', price: 17 }\r\n    }\r\n  }],\r\n  ['it', {\r\n    label: 'Italie', modes: {\r\n      mrelay_it: { label: 'Mondial Relay', price: 12 },\r\n      laposte_it: { label: 'Colissimo International', price: 17 }\r\n    }\r\n  }],\r\n  ['nl', {\r\n    label: 'Pays Bas', modes: {\r\n      mrelay_nl: { label: 'Mondial Relay', price: 6.6 },\r\n      laposte_nl: { label: 'Colissimo International', price: 17 }\r\n    }\r\n  }],\r\n  ['pt', {\r\n    label: 'Portugal', modes: {\r\n      mrelay_pt: { label: 'Mondial Relay', price: 12 },\r\n      laposte_pt: { label: 'Colissimo International', price: 17 }\r\n    }\r\n  }],\r\n]);\r\n\r\ninterface StepShippingProps extends MinimunStepGenericProps {\r\n  onChange?: (value: [val: string, price: number]) => void\r\n}\r\n\r\nexport function StepShipping(props: StepShippingProps) {\r\n  const [country, setCountry] = useState<string>('fr');\r\n  const [mode, setMode] = useState<string>('mrelay_fr');\r\n\r\n  function selectCountry(value: string): void {\r\n    const countryObj = ShippingModesByCountries.get(value);\r\n    if (!countryObj) return;\r\n\r\n    const firstModeKey = Object.keys(countryObj.modes)[0];\r\n\r\n    setCountry(value);\r\n    setMode(firstModeKey);\r\n\r\n    if (props.onChange)\r\n      props.onChange([firstModeKey, countryObj.modes[firstModeKey].price]);\r\n  }\r\n\r\n  function selectMode(value: string): void {\r\n    const countryObj = ShippingModesByCountries.get(country);\r\n    if (!countryObj) return;\r\n\r\n    const modeObj = countryObj.modes[value];\r\n    if (!modeObj) return;\r\n\r\n    setMode(value);\r\n\r\n    if (props.onChange)\r\n      props.onChange([value, modeObj.price]);\r\n\r\n    if (props.onNext)\r\n      props.onNext();\r\n  }\r\n\r\n  function getValueLabel(): string {\r\n    const countryObj = ShippingModesByCountries.get(country);\r\n    if (!countryObj) return '';\r\n\r\n    const modeObj = countryObj.modes[mode];\r\n    if (!countryObj) return '';\r\n\r\n    return modeObj.label;\r\n  }\r\n\r\n  function getPriceLabel(): string {\r\n    const countryObj = ShippingModesByCountries.get(country);\r\n    if (!countryObj) return '';\r\n\r\n    const modeObj = countryObj.modes[mode];\r\n    if (!countryObj) return '';\r\n\r\n    return modeObj.price > 0 ? ('+' + modeObj.price + '€') : 'Gratuit';\r\n  }\r\n\r\n  const availableModes = ShippingModesByCountries.get(country)?.modes || {};\r\n\r\n  return (\r\n    <StepGeneric {...props} stepClassName='shipping' typeLabel='Expédition' introLabel=\"Mode d'expédition\" valueLabel={getValueLabel} priceLabel={getPriceLabel}>\r\n      <Form inline className=\"justify-content-center\">\r\n        <InputGroup className=\"w-100\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>Pays de destination</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Form.Control as=\"select\" onChange={event => selectCountry(event.target.value)} value={country}>\r\n            {Array.from(ShippingModesByCountries).map(([countryCode, shippingModes]) =>\r\n              <option key={'country-' + countryCode} value={countryCode}>{shippingModes.label}</option>\r\n            )}\r\n          </Form.Control>\r\n        </InputGroup>\r\n        <InputGroup className=\"w-100 mt-2\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>Mode d'envoi</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Form.Control as=\"select\" onChange={event => selectMode(event.target.value)} value={country}>\r\n            <option className=\"placeholder\">-</option>\r\n            {Object.entries(availableModes).map(([id, mode]) =>\r\n              <option key={'mode-' + id} value={id}>{mode.label} - {mode.price}€</option>\r\n            )}\r\n          </Form.Control>\r\n        </InputGroup>\r\n        <Form.Text className=\"text-muted float-right\">\r\n          Les supports supplémentaires au premier seront envoyés dans le même colis pour 1€ de plus.\r\n        </Form.Text>\r\n      </Form>\r\n    </StepGeneric>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Form, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\r\nimport { MinimunStepGenericProps, StepGeneric } from './StepGeneric';\r\n\r\ninterface PaymentMode {\r\n  label: string,\r\n  details: string,\r\n  price: number\r\n}\r\n\r\nconst PaymentModes = new Map<string, PaymentMode>([\r\n  ['transfert', { label: 'Virement bancaire', details: 'Paiement en quelques jours, sûr et sécurisé.', price: 0 }],\r\n  ['paypal_friends', { label: 'Paypal - entre amis', details: 'Paiement instantané, sûr et sécurisé.', price: 0 }],\r\n  ['paypal_goods', { label: 'Paypal  - biens & services', details: 'Paiement instantané, sûr et sécurisé avec assurance acheteur.', price: 5 }],\r\n]);\r\n\r\ninterface StepPaymentProps extends MinimunStepGenericProps {\r\n  onChange?: (value: [val: string, price: number]) => void\r\n}\r\n\r\nexport function StepPayment(props: StepPaymentProps) {\r\n  const [mode, setMode] = useState<string>('');\r\n\r\n  function selectMode(value: string): void {\r\n    const modeObj = PaymentModes.get(value);\r\n    if (!modeObj) return;\r\n\r\n    setMode(value);\r\n\r\n    if (props.onChange)\r\n      props.onChange([value, modeObj.price]);\r\n\r\n    if (props.onNext)\r\n      props.onNext();\r\n  }\r\n\r\n  function getValueLabel(val?: PaymentMode): string {\r\n    const modeObj = val || PaymentModes.get(mode);\r\n    if (!modeObj) return '';\r\n\r\n    return modeObj.label;\r\n  }\r\n\r\n  function getPriceLabel(val?: PaymentMode): string {\r\n    const modeObj = val || PaymentModes.get(mode);\r\n    if (!modeObj) return '';\r\n\r\n    return modeObj.price > 0 ? '+' + modeObj.price + '%' : 'Gratuit';\r\n  }\r\n\r\n  return (\r\n    <StepGeneric {...props} stepClassName='payment' typeLabel='Paiement' introLabel=\"Mode de paiement\" valueLabel={getValueLabel} priceLabel={getPriceLabel}>\r\n      <Form inline>\r\n        <ToggleButtonGroup className=\"flex-column justify-content-center\" type=\"radio\" name=\"options\" onChange={selectMode}>\r\n          {Array.from(PaymentModes, ([key, val]) =>\r\n            <ToggleButton className=\"flex-column my-2 px-4\" value={key} key={'pay-' + key}>\r\n              <div className=\"title\">{getValueLabel(val)}</div>\r\n              <div className=\"price mb-2\">{getPriceLabel(val)}</div>\r\n              <div className=\"details font-weight-light\">{val.details}</div>\r\n            </ToggleButton>\r\n          )}\r\n        </ToggleButtonGroup>\r\n      </Form>\r\n    </StepGeneric>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { MinimunStepGenericProps, StepGeneric } from './StepGeneric';\r\n\r\nexport interface CustomerInformations {\r\n  firstName: string\r\n  name: string\r\n  email: string\r\n}\r\n\r\ninterface StepCustomerInformationsProps extends MinimunStepGenericProps {\r\n  onUserChange?: (value?: CustomerInformations) => void\r\n}\r\n\r\nexport function StepCustomerInformations(props: StepCustomerInformationsProps) {\r\n  const [customerInformations, setCustomerInformations] = useState<CustomerInformations>({\r\n    firstName: '',\r\n    name: '',\r\n    email: ''\r\n  });\r\n\r\n  function getValueLabel(val?: any): string {\r\n    return customerInformations.firstName + ' ' + customerInformations.name + ' (' + customerInformations.email + ')';\r\n  }\r\n\r\n  function onSubmit() {\r\n    if (props.onUserChange)\r\n      props.onUserChange(customerInformations);\r\n\r\n    if (props.onNext)\r\n      props.onNext();\r\n  }\r\n\r\n  return (\r\n    <StepGeneric {...props} stepClassName='customerInformations' typeLabel='Identité' introLabel=\"Informations personnelles\" valueLabel={getValueLabel}>\r\n      <Form inline className=\"justify-content-around flex-fill\" onSubmit={onSubmit}>\r\n        <Form.Control name=\"firstName\" placeholder=\"Prenom\" value={customerInformations.firstName} onChange={event => setCustomerInformations({ ...customerInformations, firstName: event.target.value })} />\r\n        <Form.Control name=\"name\" placeholder=\"Nom\" value={customerInformations.name} onChange={event => setCustomerInformations({ ...customerInformations, name: event.target.value })} />\r\n        <Form.Control type=\"email\" name=\"email\" value={customerInformations.email} placeholder=\"E-mail\" onChange={event => setCustomerInformations({ ...customerInformations, email: event.target.value })} />\r\n        <Button type=\"submit\" variant=\"primary\" disabled={!customerInformations.firstName || !customerInformations.name || !customerInformations.email}>Ok</Button>\r\n      </Form>\r\n    </StepGeneric>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { StepShipping } from \"./steps/StepShipping\";\r\nimport { StepPayment } from \"./steps/StepPayment\";\r\nimport { CustomerInformations, StepCustomerInformations } from \"./steps/StepCustomerInformations\";\r\nimport { StepPrice } from \"./steps/StepPrice\";\r\n\r\nexport interface ShippingPaymentConfiguration {\r\n  shipping?: [string, number]\r\n  payment?: [string, number]\r\n  customer?: CustomerInformations\r\n}\r\n\r\nexport function getNewConfiguration(): ShippingPaymentConfiguration {\r\n  return {\r\n    shipping: undefined,\r\n    payment: undefined,\r\n    customer: undefined\r\n  };\r\n}\r\n\r\nexport function getTotalPrice(basketTotal: number, basketCount: number, conf: ShippingPaymentConfiguration): number {\r\n  if (!conf.shipping || !conf.payment || !conf.customer) return 0;\r\n\r\n  const fixAmount = basketTotal + conf.shipping[1] + (basketCount - 1);\r\n  const paymentMultiplier = 1 + (conf.payment[1] / 100);\r\n  return Math.round(fixAmount * paymentMultiplier * 10) / 10;\r\n}\r\n\r\nexport function ConfigureShippingPayment(props: {\r\n  basketTotal: number,\r\n  basketCount: number,\r\n  onChange: (conf: ShippingPaymentConfiguration) => void\r\n  disabled?: boolean\r\n}) {\r\n  const [stepIndex, setStepIndex] = useState(0);\r\n  const [config, setConfig] = useState<ShippingPaymentConfiguration>(getNewConfiguration());\r\n\r\n  function updateConfig(attribute: keyof ShippingPaymentConfiguration, value: any) {\r\n    const newConfig = { ...config, [attribute]: value };\r\n    setConfig(newConfig);\r\n    props.onChange(newConfig);\r\n  }\r\n\r\n  return (\r\n    <div className=\"configureShippingPayment clearfix\">\r\n      <div className=\"myAccordion w-100 border border-info\">\r\n        <StepShipping expanded={stepIndex === 0} onSelected={() => props.disabled || setStepIndex(0)} onNext={() => props.disabled || setStepIndex(1)} onChange={val => updateConfig('shipping', val)} />\r\n        <StepPayment displayed={stepIndex >= 1} expanded={stepIndex === 1} onSelected={() => props.disabled || setStepIndex(1)} onNext={() => props.disabled || setStepIndex(2)} onChange={val => updateConfig('payment', val)} />\r\n        <StepCustomerInformations displayed={stepIndex >= 2} expanded={stepIndex === 2} onSelected={() => props.disabled || setStepIndex(2)} onNext={() => props.disabled || setStepIndex(3)} onUserChange={val => updateConfig('customer', val)}/>\r\n        <StepPrice displayed={stepIndex === 3} total={getTotalPrice(props.basketTotal, props.basketCount, config)} />\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { Row, Col, Image, Button, Form, Alert, Spinner } from 'react-bootstrap';\r\n//import { useRouteMatch } from 'react-router';\r\nimport { Optionnal } from '../../../components/Optionnal';\r\nimport { logEvent } from '../../../components/TawkTo';\r\nimport { useFormSubmit } from '../../../utils/FormSubmit';\r\nimport { ConfigureRack, getNewConfiguration as rGetNewConfiguration, validConfiguration, RackConfiguration, getTotalPrice as getRackPrice, getPartNumber } from './ConfigureRack';\r\nimport { ConfigureShippingPayment, getNewConfiguration as spGetNewConfiguration, getTotalPrice, ShippingPaymentConfiguration } from './ConfigureShippingPayment';\r\nimport './Racks.scss';\r\n\r\nfunction Racks() {\r\n  //let { path, url } = useRouteMatch();\r\n\r\n  const [products, setProducts] = useState<RackConfiguration[]>([rGetNewConfiguration()]);\r\n  const [shippingPayment, setShippingPayment] = useState<ShippingPaymentConfiguration>(spGetNewConfiguration());\r\n  const [orderState,, sendOrder] = useFormSubmit('New order !');\r\n\r\n  function onProductChange(index: number, product: RackConfiguration) {\r\n    const newProducts = [...products];\r\n    newProducts[index] = product;\r\n    setProducts(newProducts);\r\n\r\n    if (validConfiguration(product)) {\r\n      logEvent('productChange', {\r\n        nbProducts: newProducts.length,\r\n        basket: newProducts.map(getPartNumber).join(', '),\r\n        totalProduct: getProductsPrice(newProducts)\r\n      });\r\n    }\r\n  }\r\n\r\n  function onAddProduct() {\r\n    setProducts([...products, rGetNewConfiguration()]);\r\n  }\r\n\r\n  function getProductsPrice(products: RackConfiguration[]): number {\r\n    return products.reduce((p, product) => p + (validConfiguration(product) ? getRackPrice(product) : 0), 0);\r\n  }\r\n\r\n  function onShippingChange(conf: ShippingPaymentConfiguration) {\r\n    setShippingPayment(conf);\r\n\r\n    logEvent('shippingChange', {\r\n      products: products.map(getPartNumber).join(', '),\r\n      shipping: conf.shipping ? conf.shipping[0] : '',\r\n      payment: conf.payment ? conf.payment[0] : '',\r\n      totalPrice: getTotalPrice(getProductsPrice(products), products.filter(p => validConfiguration(p)).length, conf) + '€',\r\n      customer: conf.customer ? (conf.customer.firstName + ' ' + conf.customer.name + ' - ' + conf.customer.email) : ''\r\n    });\r\n  }\r\n\r\n  function confirmOrder(event: React.FormEvent<HTMLFormElement>) {\r\n    event.preventDefault();\r\n\r\n    const data = {\r\n      products: products.map(getPartNumber).join(', '),\r\n      shipping: shippingPayment.shipping ? shippingPayment.shipping[0] : '',\r\n      payment: shippingPayment.payment ? shippingPayment.payment[0] : '',\r\n      totalPrice: getTotalPrice(getProductsPrice(products), products.filter(p => validConfiguration(p)).length, shippingPayment) + '€',\r\n      customer: shippingPayment.customer ? (shippingPayment.customer.firstName + ' ' + shippingPayment.customer.name + ' - ' + shippingPayment.customer.email) : ''\r\n    };\r\n\r\n    logEvent('confirmOrder', data);\r\n    sendOrder(data);\r\n  }\r\n\r\n  return (\r\n    <div className=\"orderRacks\">\r\n      <Optionnal displayed={orderState.succeeded}>\r\n        <Row className=\"my-5 justify-content-center\">\r\n          <Col md={10}>\r\n            <Alert variant=\"success\">Merci pour votre commande, nous reviendrons vers vous très vite avec les informations pour le paiement et organiser la livraison. Merci pour votre commande !</Alert>\r\n          </Col>\r\n        </Row>\r\n      </Optionnal>\r\n      <Optionnal displayed={!orderState.succeeded}>\r\n        <Row className=\"mt-4\">\r\n          <Col md={5}>\r\n            <Image src=\"img/racks/racks.jpg\" thumbnail alt=\"Support pour filières de Philips Pasta Maker\" />\r\n          </Col>\r\n          <Col md={7} className=\"mt-4\">\r\n            <h2>Support pour filières</h2>\r\n            <p>Disponible pour les machines <strong>Philips Pasta Maker Avance</strong> et <strong>Philips Pasta Maker Viva</strong>, en plusieurs capacités et en plusieurs couleurs.</p>\r\n            <p>Faites vos choix pour configurer votre support puis passez commande ici-même.</p>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-3\">\r\n          <Col>\r\n            {products.map((product, index) =>\r\n              <ConfigureRack onChange={conf => onProductChange(index, conf)} onAdd={products.length - 1 === index ? onAddProduct : undefined} disabled={orderState.submitting} key={'product' + index} />\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <Optionnal displayed={products.some(prod => validConfiguration(prod))}>\r\n          <Row className=\"mt-3 mb-4\">\r\n            <Col>\r\n              <ConfigureShippingPayment basketTotal={getProductsPrice(products)} basketCount={products.filter(p => validConfiguration(p)).length} onChange={onShippingChange} disabled={orderState.submitting} />\r\n            </Col>\r\n          </Row>\r\n          <Optionnal displayed={getTotalPrice(getProductsPrice(products), products.filter(p => validConfiguration(p)).length, shippingPayment) > 0}>\r\n            <Row className=\"mt-3 mb-5\">\r\n              <Col>\r\n                <p>En cliquant sur le bouton de validation, nous serons informé de votre commande. Nous reviendrons alors vers vous par e-mail pour organiser la livraison et le paiement suivant les choix que vous aurez fait sur cette page. </p>\r\n                <Form onSubmit={confirmOrder}>\r\n                  <Button className=\"validate\" type=\"submit\" variant=\"primary\" size=\"lg\" block disabled={orderState.submitting}>\r\n                    <Optionnal displayed={orderState.submitting}><Spinner as=\"span\" className=\"waiting\" animation=\"border\" role=\"status\" aria-hidden=\"true\" /></Optionnal>\r\n                    Valider ma commande\r\n                  </Button>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Optionnal>\r\n        </Optionnal>\r\n      </Optionnal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Racks;\r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Route, Switch, Redirect, useRouteMatch } from 'react-router';\r\nimport Racks from './racks/Racks';\r\nimport './ProductsPage.scss';\r\n\r\nfunction ProductsPage() {\r\n  let { path } = useRouteMatch();\r\n\r\n  return (\r\n    <Container className=\"page order\">\r\n      <Switch>\r\n        <Route exact path={path}>\r\n          {/* Create a page that let user pick a type of product */}\r\n          <Redirect to='produits/supportFilieres' />\r\n        </Route>\r\n        <Route path={`${path}/supportFilieres`}>\r\n          <Racks />\r\n        </Route>\r\n      </Switch>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ProductsPage;\r\n","import React from 'react';\r\nimport { Container, Form, Button, Row, Col, Alert } from 'react-bootstrap';\r\nimport { Optionnal } from '../../components/Optionnal';\r\nimport { useStatus } from '../../components/TawkTo';\r\nimport { useFormSubmit } from '../../utils/FormSubmit';\r\nimport './ContactPage.scss';\r\n\r\nfunction ContactPage() {\r\n  const chatStatus = useStatus();\r\n  const [state, handleSubmit] = useFormSubmit('Message from contact page');\r\n\r\n  return (\r\n    <Container className=\"page contact\">\r\n      <Optionnal displayed={state.succeeded}>\r\n        <Row className=\"my-5 justify-content-center\">\r\n          <Col md={10}>\r\n            <Alert variant=\"success\">Merci pour votre message, nous vons répondrons par mail le plus rapidement possible !</Alert>\r\n          </Col>\r\n        </Row>\r\n      </Optionnal>\r\n      <Optionnal displayed={!state.succeeded}>\r\n        <Row className=\"mt-5\">\r\n          <Col md={12}>\r\n            <p>Vous avez une question ?</p>\r\n            <p>N'hésitez pas à nous envoyer un message, nous vons répondrons par e-mail le plus rapidement possible !</p>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md={8} className=\"\">\r\n            <Form onSubmit={handleSubmit}>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Control name=\"nom\" placeholder=\"Nom\" />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Control name=\"prenom\" placeholder=\"Prenom\" />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Control type=\"email\" name=\"email\" placeholder=\"Adresse e-mail\" />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Control as=\"textarea\" name=\"message\" rows={5} placeholder=\"Message\" />\r\n                  </Form.Group>\r\n                  <Button className=\"float-right\" variant=\"primary\" type=\"submit\" disabled={state.submitting}>Envoyer</Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n        <Optionnal displayed={chatStatus === 'online'}>\r\n          <Row className=\"my-5\">\r\n            <Col md={12}>\r\n              <p>Vous pouvez aussi nous contacter en direct par chat, commencez une conversation en utilisant l'icone en bas à droite de la page.</p>\r\n            </Col>\r\n          </Row>\r\n        </Optionnal>\r\n      </Optionnal>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ContactPage;\r\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { TawkTo } from './components/TawkTo';\nimport TopBar from './components/TopBar/TopBar';\nimport HomePage from './pages/home/HomePage';\nimport OrderPage from './pages/products/ProductsPage';\nimport ContactPage from './pages/contact/ContactPage';\n\nfunction App() {\n  return (\n    <Container className=\"app\">\n      <Router>\n        <TopBar />\n        <div className=\"pageContainer\">\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route path=\"/produits\">\n              <OrderPage />\n            </Route>\n            <Route exact path=\"/contact\">\n              <ContactPage />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n      <TawkTo propertyId=\"60c1f8b565b7290ac6353627\" apiKey=\"1f7qr719r\" />\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}