{"version":3,"sources":["components/TawkTo.tsx","components/TopBar/TopBar.tsx","pages/home/HomePage.tsx","components/Optionnal.tsx","pages/order/racks/steps/StepGeneric.tsx","pages/order/racks/steps/StepValueTile.tsx","pages/order/racks/steps/StepMachine.tsx","pages/order/racks/steps/StepCapacity.tsx","pages/order/racks/steps/StepColor.tsx","pages/order/racks/steps/StepPrice.tsx","pages/order/racks/ConfigureRack.tsx","pages/order/racks/steps/StepPayment.tsx","pages/order/racks/steps/StepShipping.tsx","pages/order/racks/ConfigureShippingPayment.tsx","pages/order/racks/Racks.tsx","pages/order/OrderPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TawkTo","props","window","Tawk_API","Tawk_LoadStart","Date","id","async","src","propertyId","apiKey","charSet","crossOrigin","Topbar","Navbar","className","sticky","bg","variant","to","NavbarBrand","Nav","exact","Link","HomePage","Container","Row","Col","md","Image","thumbnail","alt","Optionnal","displayed","children","StepGeneric","stepClassName","expanded","onClick","onSelected","introLabel","typeLabel","valueLabel","undefined","priceLabel","StepValueTile","label","value","onSelect","StepMachine","useState","setValue","selectValue","onChange","onNext","CAPACITIES","Map","price","StepCapacity","val","get","Array","from","key","COLORS","StepColor","StepPrice","total","validConfiguration","config","machine","capacity","color","getTotalPrice","Object","values","reduce","p","c","ConfigureRack","stepIndex","setStepIndex","product","setProduct","updateProduct","attribute","newProduct","onAdd","Button","PaymentModes","details","StepPayment","mode","setMode","getValueLabel","modeObj","getPriceLabel","Form","inline","ToggleButtonGroup","type","name","defaultValue","ToggleButton","ShippingModesByCountries","modes","none","mrelay_fr","laposte_fr","mrelay_be","laposte_be","mrelay_lu","laposte_lu","mrelay_de","laposte_de","mrelay_at","laposte_at","mrelay_es","laposte_es","mrelay_it","laposte_it","mrelay_nl","laposte_nl","mrelay_pt","laposte_pt","StepShipping","country","setCountry","availableModes","countryObj","InputGroup","Prepend","Text","Control","as","event","firstModeKey","keys","selectCountry","target","map","countryCode","shippingModes","selectMode","entries","ConfigureShippingPayment","shipping","payment","setConfig","updateConfig","newConfig","fixAmount","basketTotal","paymentMultiplier","Math","round","Racks","useRouteMatch","path","url","products","setProducts","setShippingPayment","onAddProduct","index","conf","newProducts","onProductChange","length","some","prod","OrderPage","App","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11452b11.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ndeclare global {\r\n  var Tawk_API: any;\r\n  var Tawk_LoadStart: Date\r\n}\r\n\r\nexport function TawkTo(props: {\r\n  propertyId: string,\r\n  apiKey: string\r\n}) {\r\n  window.Tawk_API = window.Tawk_API || {};\r\n  window.Tawk_LoadStart = new Date();\r\n\r\n  return <script id=\"tawkId\" async src={'https://embed.tawk.to/' + props.propertyId + '/' + props.apiKey} charSet=\"UTF-8\" crossOrigin=\"*\" />;\r\n}","import React from 'react';\r\nimport { Navbar, NavbarBrand, Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport './TopBar.scss';\r\n\r\nfunction Topbar() {\r\n  return (\r\n    <Navbar className=\"topBarComponent\" sticky=\"top\" bg=\"light\" variant=\"light\">\r\n      <LinkContainer to=\"/\">\r\n        <NavbarBrand>ViPi 3D</NavbarBrand>\r\n      </LinkContainer>\r\n      \r\n      <Nav className=\"ml-auto\">\r\n        <LinkContainer exact to=\"/\">\r\n          <Nav.Link>Acceuil</Nav.Link>\r\n        </LinkContainer>\r\n        <LinkContainer to=\"/commande\">\r\n          <Nav.Link>Commander</Nav.Link>\r\n        </LinkContainer>\r\n        <LinkContainer exact to=\"/contact\">\r\n          <Nav.Link>Nous contacter</Nav.Link>\r\n        </LinkContainer>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Topbar;\r\n","import React from 'react';\r\nimport { Container, Row, Col, Image } from 'react-bootstrap';\r\nimport './HomePage.scss';\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <Container className=\"page home\">\r\n      <Row className=\"about-us mt-5\">\r\n        <Col md={12} className=\"section-heading text-center\">\r\n          <h2>À propos de nous</h2>\r\n          <h3 className=\"my-5 mx-auto\">Passionné par le fait-main, nous concevons des objets pour la maison, souvent fabriqués à l'aide d'une imprimante 3D.</h3>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={7}>\r\n          <Image src=\"img/intro.jpg\" thumbnail alt=\"Support Philips Pasta Maker Avance 32 filières\" />\r\n        </Col>\r\n        <Col md={5}>\r\n          <h2>Les supports pour filières</h2>\r\n          <p>Notre plus grand succès aujourd'hui: un support pour filières pour machines à pâtes.</p>\r\n          <p>Il est disponible pour les machines <strong>Philips Pasta Maker Avance</strong> et <strong>Philips Pasta Maker Viva</strong>, en plusieurs capacités et en plusieurs couleurs.</p>\r\n          <p>De nouveaux modèles sont en préparation, restez à l'écoute !</p>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\n\r\nexport interface OptionnalProps {\r\n  displayed: boolean\r\n}\r\n\r\nexport function Optionnal(props: React.PropsWithChildren<OptionnalProps>): JSX.Element {\r\n  return (\r\n    <>\r\n      {props.displayed ? props.children : null}\r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport { Optionnal } from '../../../../components/Optionnal';\r\n\r\nexport interface MinimunStepGenericProps {\r\n  displayed?: boolean,\r\n  expanded: boolean,\r\n  onChange?: (value: [val: string, price: number]) => void,\r\n  onSelected?: () => void,\r\n  onNext?: () => void\r\n}\r\n\r\ninterface StepGenericProps extends MinimunStepGenericProps {\r\n  stepClassName: string\r\n  typeLabel: string\r\n  introLabel: string\r\n  valueLabel: () => string\r\n  priceLabel?: () => string\r\n}\r\n\r\nexport function StepGeneric(props: React.PropsWithChildren<StepGenericProps>) {\r\n  return (\r\n    <Optionnal displayed={props.displayed !== false}>\r\n      <div className={'step ' + props.stepClassName + ' border border-info ' + (props.expanded ? 'expanded' : 'collapsed bg-light')}>\r\n        <div className={'header py-2 px-2 ' + (props.expanded ? '' : 'bg-light')} onClick={props.onSelected}>\r\n          <span className=\"type\">{props.expanded ? props.introLabel : props.typeLabel + ' :'}</span>&nbsp;\r\n          <span className=\"value text-muted\">{props.expanded ? '' : props.valueLabel()}</span>\r\n          <Optionnal displayed={!props.expanded && props.priceLabel !== undefined}><span className=\"price float-right\">{props.priceLabel ? props.priceLabel() : ''}</span></Optionnal>\r\n        </div>\r\n        <Optionnal displayed={props.expanded}>\r\n          <div className=\"content border-top border-info p-2\">\r\n            {props.children}\r\n          </div>\r\n        </Optionnal>\r\n      </div>\r\n    </Optionnal>\r\n  );\r\n}","import React from 'react';\r\nimport { Image } from 'react-bootstrap';\r\n\r\nexport interface StepValueTileProps {\r\n  label?: string\r\n  value: string\r\n  src: string\r\n  onSelect: (value: string) => void\r\n}\r\n\r\nexport function StepValueTile(props: StepValueTileProps) {\r\n  const label = '' + (props.label || props.value);\r\n  return (\r\n    <figure className=\"figure\" onClick={() => props.onSelect(props.value)}>\r\n      <Image src={props.src} thumbnail alt={label} />\r\n      <figcaption className=\"figure-caption\">{label}</figcaption>\r\n    </figure>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { MinimunStepGenericProps, StepGeneric } from './StepGeneric';\r\nimport { StepValueTile } from './StepValueTile';\r\n\r\ninterface StepMachineProps extends MinimunStepGenericProps {\r\n\r\n}\r\n\r\nexport function StepMachine(props: StepMachineProps) {\r\n  const [value, setValue] = useState<string>('');\r\n\r\n  function selectValue(value: string): void {\r\n    setValue(value);\r\n    if (props.onChange)\r\n      props.onChange([value, 0]);\r\n    if (props.onNext)\r\n      props.onNext();\r\n  }\r\n\r\n  function getValueLabel(): string {\r\n    return value\r\n  }\r\n\r\n  return (\r\n    <StepGeneric {...props} stepClassName='machine' typeLabel='Machine' introLabel='Machine utilisée' valueLabel={getValueLabel}>\r\n      <StepValueTile src={'../img/racks/machine-avance.jpg'} value={'Philips Pasta Maker Avance'} onSelect={selectValue} />\r\n      <StepValueTile src={'../img/racks/machine-viva.png'} value={'Philips Pasta Maker Viva'} onSelect={selectValue} />\r\n    </StepGeneric>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { MinimunStepGenericProps, StepGeneric } from './StepGeneric';\r\nimport { StepValueTile } from './StepValueTile';\r\n\r\n\r\nconst CAPACITIES = new Map<string, { price: number }>([\r\n  ['16', { price: 18 }],\r\n  ['24', { price: 24 }],\r\n  ['32', { price: 32 }]\r\n]);\r\n\r\ninterface StepCapacityProps extends MinimunStepGenericProps {\r\n\r\n}\r\n\r\nexport function StepCapacity(props: StepCapacityProps) {\r\n  const [value, setValue] = useState<string>('');\r\n\r\n  function selectValue(value: string): void {\r\n    const val = CAPACITIES.get(value);\r\n    if (!val) return;\r\n    \r\n    setValue(value);\r\n    if (props.onChange)\r\n      props.onChange([value, val.price]);\r\n    if (props.onNext)\r\n      props.onNext();\r\n  }\r\n\r\n  function getValueLabel(): string {\r\n    return value + ' filières';\r\n  }\r\n\r\n  function getPriceLabel(): string {\r\n    const val = CAPACITIES.get(value);\r\n    return val ? val.price + '€' : '';\r\n  }\r\n\r\n  return (\r\n    <StepGeneric {...props} stepClassName='capacity' typeLabel='Capacité' introLabel='Capacité du support' valueLabel={getValueLabel} priceLabel={getPriceLabel}>\r\n      {Array.from(CAPACITIES, ([key, val]) =>\r\n        <StepValueTile src={'../img/racks/capacity-' + key + '.png'} value={key} label={key + ' filières'} onSelect={selectValue} key={'cap' + key} />\r\n      )}\r\n    </StepGeneric>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { MinimunStepGenericProps, StepGeneric } from './StepGeneric';\r\nimport { StepValueTile } from './StepValueTile';\r\n\r\nconst COLORS = new Map<string, { label: string, price: number }>([\r\n  ['white', { label: 'Blanc', price: 0 }],\r\n  ['black', { label: 'Noir', price: 1 }],\r\n  ['nightblue', { label: 'Bleu nuit', price: 1 }],\r\n  ['grey', { label: 'Gris', price: 1 }],\r\n  ['red', { label: 'Rouge', price: 1 }],\r\n  ['skyblue', { label: 'Bleu ciel', price: 2 }],\r\n  ['turquoiseblue', { label: 'Bleu turquoise', price: 2 }],\r\n  ['bronze', { label: 'Bronze', price: 3 }],\r\n  ['pastelblue', { label: 'Bleu pastel', price: 3.5 }],\r\n  ['pastelgreen', { label: 'Vert pastel', price: 3.5 }],\r\n  ['pastelpink', { label: 'Rose pastel', price: 3.5 }]\r\n]);\r\n\r\ninterface StepColorProps extends MinimunStepGenericProps {\r\n\r\n}\r\n\r\nexport function StepColor(props: StepColorProps) {\r\n  const [value, setValue] = useState<string>('');\r\n\r\n  function selectValue(value: string): void {\r\n    const val = COLORS.get(value);\r\n    if (!val) return;\r\n\r\n    setValue(value);\r\n    if (props.onChange)\r\n      props.onChange([value, val.price]);\r\n    if (props.onNext)\r\n      props.onNext();\r\n  }\r\n\r\n  function getValueLabel(): string {\r\n    return '' + COLORS.get(value)?.label;\r\n  }\r\n\r\n  function getPriceLabel(): string {\r\n    const val = COLORS.get(value);\r\n    return val ? '+' + val.price + '€' : '';\r\n  }\r\n\r\n  return (\r\n    <StepGeneric {...props} stepClassName='color' typeLabel='Couleur' introLabel='Couleur du support' valueLabel={getValueLabel} priceLabel={getPriceLabel}>\r\n      {Array.from(COLORS, ([key, val]) =>\r\n        <StepValueTile src={'../img/racks/color-' + key + '.png'} label={val.label} value={key} onSelect={selectValue} key={'col' + key} />\r\n      )}\r\n    </StepGeneric>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { StepGeneric } from './StepGeneric';\r\n\r\ninterface StepPriceProps {\r\n  displayed?: boolean\r\n  total: number\r\n}\r\n\r\nexport function StepPrice(props: StepPriceProps) {\r\n  return (\r\n    <StepGeneric displayed={props.displayed} expanded={false} stepClassName='price' typeLabel='Total' introLabel='' valueLabel={() => props.total + '€'}></StepGeneric>\r\n  );\r\n}\r\n","\r\nimport React, { useState } from 'react';\r\nimport { Optionnal } from '../../../components/Optionnal';\r\nimport { StepMachine } from './steps/StepMachine';\r\nimport { StepCapacity } from './steps/StepCapacity';\r\nimport { StepColor } from './steps/StepColor';\r\nimport { StepPrice } from './steps/StepPrice';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport interface RackConfiguration {\r\n  machine: [string, number],\r\n  capacity: [string, number],\r\n  color: [string, number]\r\n}\r\n\r\nexport function getNewConfiguration(): RackConfiguration {\r\n  return {\r\n    machine: ['', 0],\r\n    capacity: ['', 0],\r\n    color: ['', 0],\r\n  };\r\n}\r\n\r\nexport function validConfiguration(config: RackConfiguration): boolean {\r\n  return config.machine[0] !== '' && config.capacity[0] !== '' && config.color[0] !== '';\r\n}\r\n\r\nexport function getTotalPrice(config: RackConfiguration): number {\r\n  return Object.values(config).reduce((p, c) => p + c[1], 0);\r\n}\r\n\r\nexport function ConfigureRack(props: {\r\n  onChange: (conf: RackConfiguration) => void\r\n  onAdd?: () => void\r\n}) {\r\n  const [stepIndex, setStepIndex] = useState(0);\r\n  const [product, setProduct] = useState<RackConfiguration>(getNewConfiguration());\r\n\r\n  function updateProduct(attribute: keyof RackConfiguration, value: [string, number]) {\r\n    const newProduct = { ...product, [attribute]: value };\r\n    setProduct(newProduct);\r\n    props.onChange(newProduct);\r\n  }\r\n\r\n  return (\r\n    <div className=\"configureRack clearfix\">\r\n      <div className=\"myAccordion w-100 border border-info\">\r\n        <StepMachine expanded={stepIndex === 0} onSelected={() => setStepIndex(0)} onNext={() => setStepIndex(1)} onChange={val => updateProduct('machine', val)} />\r\n        <StepCapacity displayed={stepIndex >= 1} expanded={stepIndex === 1} onSelected={() => setStepIndex(1)} onNext={() => setStepIndex(2)} onChange={val => updateProduct('capacity', val)} />\r\n        <StepColor displayed={stepIndex >= 2} expanded={stepIndex === 2} onSelected={() => setStepIndex(2)} onNext={() => setStepIndex(3)} onChange={val => updateProduct('color', val)} />\r\n        <StepPrice displayed={stepIndex === 3} total={getTotalPrice(product)} />\r\n      </div>\r\n      <Optionnal displayed={stepIndex === 3 && props.onAdd !== undefined}><Button className=\"my-2 float-right\" variant=\"primary\" onClick={props.onAdd}>Ajouter un autre support à ma commande</Button></Optionnal>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { Form, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\r\nimport { MinimunStepGenericProps, StepGeneric } from './StepGeneric';\r\n\r\ninterface PaymentMode {\r\n  label: string,\r\n  details: string,\r\n  price: number\r\n}\r\n\r\nconst PaymentModes = new Map<string, PaymentMode>([\r\n  ['transfert', { label: 'Virement bancaire', details: 'Paiement en quelques jours, sûr et sécurisé.', price: 0 }],\r\n  ['paypal_friends', { label: 'Paypal - entre amis', details: 'Paiement instantané, sûr et sécurisé.', price: 0 }],\r\n  ['paypal_goods', { label: 'Paypal  - biens & services', details: 'Paiement instantané, sûr et sécurisé avec assurance acheteur.', price: 5 }],\r\n]);\r\n\r\ninterface StepPaymentProps extends MinimunStepGenericProps {\r\n\r\n}\r\n\r\nexport function StepPayment(props: StepPaymentProps) {\r\n  const [mode, setMode] = useState<string>('');\r\n\r\n  function selectMode(value: string): void {\r\n    const modeObj = PaymentModes.get(value);\r\n    if (!modeObj) return;\r\n\r\n    setMode(value);\r\n\r\n    if (props.onChange)\r\n      props.onChange([value, modeObj.price]);\r\n\r\n    if (props.onNext)\r\n      props.onNext();\r\n  }\r\n\r\n  function getValueLabel(val?: PaymentMode): string {\r\n    const modeObj = val || PaymentModes.get(mode);\r\n    if (!modeObj) return '';\r\n\r\n    return modeObj.label;\r\n  }\r\n\r\n  function getPriceLabel(val?: PaymentMode): string {\r\n    const modeObj = val || PaymentModes.get(mode);\r\n    if (!modeObj) return '';\r\n\r\n    return modeObj.price > 0 ? '+' + modeObj.price + '%' : 'Gratuit';\r\n  }\r\n\r\n  return (\r\n    <StepGeneric {...props} stepClassName='payment' typeLabel='Paiement' introLabel=\"Mode de paiement\" valueLabel={getValueLabel} priceLabel={getPriceLabel}>\r\n      <Form inline>\r\n        <ToggleButtonGroup className=\"justify-content-md-center\" type=\"radio\" name=\"options\" defaultValue={mode} onChange={selectMode}>\r\n          {Array.from(PaymentModes, ([key, val]) =>\r\n            <ToggleButton className=\"flex-column px-4\" value={key} key={'pay-' + key}>\r\n              <span className=\"title\">{getValueLabel(val)}</span>\r\n              <span className=\"price mb-2\">{getPriceLabel(val)}</span>\r\n              <span className=\"details font-weight-light\">{val.details}</span>\r\n            </ToggleButton>\r\n          )}\r\n        </ToggleButtonGroup>\r\n      </Form>\r\n    </StepGeneric>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Form, InputGroup } from 'react-bootstrap';\r\nimport { MinimunStepGenericProps, StepGeneric } from './StepGeneric';\r\n\r\ninterface ShippingMode {\r\n  label: string,\r\n  price: number\r\n}\r\n\r\nconst ShippingModesByCountries = new Map<string, { label: string, modes: { [id: string]: ShippingMode } }>([\r\n  ['fr', {\r\n    label: 'France', modes: {\r\n      none: { label: 'En main propre à Gentilly (94250)', price: 0 },\r\n      mrelay_fr: { label: 'Mondial Relay', price: 5.5 },\r\n      laposte_fr: { label: 'Colissimo - Livraison en 2 jours', price: 9 }\r\n    }\r\n  }],\r\n  ['be', {\r\n    label: 'Belgique', modes: {\r\n      mrelay_be: { label: 'Mondial Relay ', price: 5.5 },\r\n      laposte_be: { label: 'Colissimo International', price: 17 }\r\n    }\r\n  }],\r\n  ['lu', {\r\n    label: 'Luxembourg', modes: {\r\n      mrelay_lu: { label: 'Mondial Relay', price: 6 },\r\n      laposte_lu: { label: 'Colissimo International', price: 17 }\r\n    }\r\n  }],\r\n  ['de', {\r\n    label: 'Allemagne', modes: {\r\n      mrelay_de: { label: 'Mondial Relay', price: 10.5 },\r\n      laposte_de: { label: 'Colissimo International', price: 17 }\r\n    }\r\n  }],\r\n  ['at', {\r\n    label: 'Autriche', modes: {\r\n      mrelay_at: { label: 'Mondial Relay', price: 12 },\r\n      laposte_at: { label: 'Colissimo International', price: 17 }\r\n    }\r\n  }],\r\n  ['es', {\r\n    label: 'Espagne', modes: {\r\n      mrelay_es: { label: 'Mondial Relay', price: 8 },\r\n      laposte_es: { label: 'Colissimo International', price: 17 }\r\n    }\r\n  }],\r\n  ['it', {\r\n    label: 'Italie', modes: {\r\n      mrelay_it: { label: 'Mondial Relay', price: 12 },\r\n      laposte_it: { label: 'Colissimo International', price: 17 }\r\n    }\r\n  }],\r\n  ['nl', {\r\n    label: 'Pays Bas', modes: {\r\n      mrelay_nl: { label: 'Mondial Relay', price: 6.6 },\r\n      laposte_nl: { label: 'Colissimo International', price: 17 }\r\n    }\r\n  }],\r\n  ['pt', {\r\n    label: 'Portugal', modes: {\r\n      mrelay_pt: { label: 'Mondial Relay', price: 12 },\r\n      laposte_pt: { label: 'Colissimo International', price: 17 }\r\n    }\r\n  }],\r\n]);\r\n\r\ninterface StepShippingProps extends MinimunStepGenericProps {\r\n\r\n}\r\n\r\nexport function StepShipping(props: StepShippingProps) {\r\n  const [country, setCountry] = useState<string>('fr');\r\n  const [mode, setMode] = useState<string>('mrelay_fr');\r\n\r\n  function selectCountry(value: string): void {\r\n    const countryObj = ShippingModesByCountries.get(value);\r\n    if (!countryObj) return;\r\n\r\n    const firstModeKey = Object.keys(countryObj.modes)[0];\r\n\r\n    setCountry(value);\r\n    setMode(firstModeKey);\r\n\r\n    if (props.onChange)\r\n      props.onChange([firstModeKey, countryObj.modes[firstModeKey].price]);\r\n  }\r\n\r\n  function selectMode(value: string): void {\r\n    const countryObj = ShippingModesByCountries.get(country);\r\n    if (!countryObj) return;\r\n\r\n    const modeObj = countryObj.modes[value];\r\n    if (!modeObj) return;\r\n\r\n    setMode(value);\r\n\r\n    if (props.onChange)\r\n      props.onChange([value, modeObj.price]);\r\n\r\n    if (props.onNext)\r\n      props.onNext();\r\n  }\r\n\r\n  function getValueLabel(): string {\r\n    const countryObj = ShippingModesByCountries.get(country);\r\n    if (!countryObj) return '';\r\n\r\n    const modeObj = countryObj.modes[mode];\r\n    if (!countryObj) return '';\r\n\r\n    return modeObj.label;\r\n  }\r\n\r\n  function getPriceLabel(): string {\r\n    const countryObj = ShippingModesByCountries.get(country);\r\n    if (!countryObj) return '';\r\n\r\n    const modeObj = countryObj.modes[mode];\r\n    if (!countryObj) return '';\r\n\r\n    return modeObj.price > 0 ? ('+' + modeObj.price + '€') : 'Gratuit';\r\n  }\r\n\r\n  const availableModes = ShippingModesByCountries.get(country)?.modes || {};\r\n\r\n  return (\r\n    <StepGeneric {...props} stepClassName='shipping' typeLabel='Expédition' introLabel=\"Mode d'expédition\" valueLabel={getValueLabel} priceLabel={getPriceLabel}>\r\n      <Form inline className=\"justify-content-md-center\">\r\n        <InputGroup className=\"mr-3\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>Pays de destination</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Form.Control as=\"select\" onChange={event => selectCountry(event.target.value)} value={country}>\r\n            {Array.from(ShippingModesByCountries).map(([countryCode, shippingModes]) =>\r\n              <option key={'country-' + countryCode} value={countryCode}>{shippingModes.label}</option>\r\n            )}\r\n          </Form.Control>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>Mode d'envoi</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Form.Control as=\"select\" onChange={event => selectMode(event.target.value)} value={country}>\r\n            <option className=\"placeholder\">-</option>\r\n            {Object.entries(availableModes).map(([id, mode]) =>\r\n              <option key={'mode-' + id} value={id}>{mode.label} - {mode.price}€</option>\r\n            )}\r\n          </Form.Control>\r\n        </InputGroup>\r\n        <Form.Text className=\"text-muted float-right\">\r\n          Les supports supplémentaires au premier seront envoyés dans le même colis pour 1€ de plus.\r\n        </Form.Text>\r\n      </Form>\r\n    </StepGeneric>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { StepPayment } from \"./steps/StepPayment\";\r\nimport { StepPrice } from \"./steps/StepPrice\";\r\nimport { StepShipping } from \"./steps/StepShipping\";\r\n\r\nexport interface ShippingPaymentConfiguration {\r\n  shipping: [string, number],\r\n  payment: [string, number]\r\n}\r\n\r\nexport function getNewConfiguration(): ShippingPaymentConfiguration {\r\n  return {\r\n    shipping: ['', 0],\r\n    payment: ['', 0]\r\n  };\r\n}\r\n\r\nexport function ConfigureShippingPayment(props: {\r\n  basketTotal: number,\r\n  onChange: (conf: any) => void\r\n}) {\r\n  const [stepIndex, setStepIndex] = useState(0);\r\n  const [config, setConfig] = useState<ShippingPaymentConfiguration>(getNewConfiguration());\r\n\r\n  function updateConfig(attribute: keyof ShippingPaymentConfiguration, value: [string, number]) {\r\n    const newConfig = { ...config, [attribute]: value };\r\n    setConfig(newConfig);\r\n    props.onChange(newConfig);\r\n  }\r\n\r\n  function getTotalPrice(): number {\r\n    const fixAmount = props.basketTotal + config.shipping[1];\r\n    const paymentMultiplier = 1 + (config.payment[1] / 100);\r\n    return Math.round(fixAmount * paymentMultiplier * 10) / 10;\r\n  }\r\n\r\n  return (\r\n    <div className=\"configureShippingPayment clearfix\">\r\n      <div className=\"myAccordion w-100 border border-info\">\r\n        <StepShipping expanded={stepIndex === 0} onSelected={() => setStepIndex(0)} onNext={() => setStepIndex(1)} onChange={val => updateConfig('shipping', val)} />\r\n        <StepPayment displayed={stepIndex >= 1} expanded={stepIndex === 1} onSelected={() => setStepIndex(1)} onNext={() => setStepIndex(2)} onChange={val => updateConfig('payment', val)} />\r\n        <StepPrice displayed={stepIndex === 2} total={getTotalPrice()} />\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { Row, Col, Image, Button } from 'react-bootstrap';\r\nimport { Route, Switch, Redirect, useRouteMatch } from 'react-router';\r\nimport { Optionnal } from '../../../components/Optionnal';\r\nimport { ConfigureRack, getNewConfiguration as rGetNewConfiguration, validConfiguration, RackConfiguration, getTotalPrice } from './ConfigureRack';\r\nimport { ConfigureShippingPayment, getNewConfiguration as spGetNewConfiguration, ShippingPaymentConfiguration } from './ConfigureShippingPayment';\r\nimport './Racks.scss';\r\n\r\nfunction Racks() {\r\n  let { path, url } = useRouteMatch();\r\n\r\n  const [products, setProducts] = useState<RackConfiguration[]>([rGetNewConfiguration()]);\r\n  const [shippingPayment, setShippingPayment] = useState<ShippingPaymentConfiguration>(spGetNewConfiguration());\r\n\r\n  function onProductChange(index: number, product: RackConfiguration) {\r\n    const newProducts = [...products];\r\n    newProducts[index] = product;\r\n    setProducts(newProducts);\r\n  }\r\n\r\n  function onAddProduct() {\r\n    setProducts([...products, rGetNewConfiguration()]);\r\n  }\r\n\r\n  function getProductsPrice(): number {\r\n    return products.reduce((p, product) => p + (validConfiguration(product) ? getTotalPrice(product) : 0), 0);\r\n  }\r\n\r\n  return (\r\n    <div className=\"orderRacks\">\r\n      <Row className=\"mt-4\">\r\n        <Col md={5}>\r\n          <Image src=\"../img/racks/racks.jpg\" thumbnail alt=\"Support pour filières de Philips Pasta Maker\" />\r\n        </Col>\r\n        <Col md={7}>\r\n          <h2>Support pour filières</h2>\r\n          <p>Disponible pour les machines <strong>Philips Pasta Maker Avance</strong> et <strong>Philips Pasta Maker Viva</strong>, en plusieurs capacités et en plusieurs couleurs.</p>\r\n          <p>Faites vos choix pour configurer votre support puis passez commande ici-même.</p>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mt-3\">\r\n        <Col>\r\n          {products.map((product, index) =>\r\n            <ConfigureRack onChange={conf => onProductChange(index, conf)} onAdd={products.length - 1 === index ? onAddProduct : undefined} key={'product' + index} />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Optionnal displayed={products.some(prod => validConfiguration(prod))}>\r\n        <Row className=\"mt-3 mb-4\">\r\n          <Col>\r\n            <ConfigureShippingPayment basketTotal={getProductsPrice()} onChange={setShippingPayment} />\r\n          </Col>\r\n        </Row>\r\n      </Optionnal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Racks;\r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Route, Switch, Redirect, useRouteMatch } from 'react-router';\r\nimport Racks from './racks/Racks';\r\nimport './OrderPage.scss';\r\n\r\nfunction OrderPage() {\r\n  let { path } = useRouteMatch();\r\n\r\n  return (\r\n    <Container className=\"page order\">\r\n      <Switch>\r\n        <Route exact path={path}>\r\n          {/* Create a page that let user pick a type of product */}\r\n          <Redirect to='commande/supportFilieres' />\r\n        </Route>\r\n        <Route path={`${path}/supportFilieres`}>\r\n          <Racks />\r\n        </Route>\r\n      </Switch>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default OrderPage;\r\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { TawkTo } from './components/TawkTo';\nimport TopBar from './components/TopBar/TopBar';\nimport HomePage from './pages/home/HomePage';\nimport OrderPage from './pages/order/OrderPage';\n\nfunction App() {\n  return (\n    <Container className=\"app\">\n      <Router basename=\"/vipi3dSellerPage\">\n        <TopBar />\n        <div className=\"pageContainer\">\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route path=\"/commande\">\n              <OrderPage />\n            </Route>\n            <Route exact path=\"/contact\">\n              Nous contacter\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n      <TawkTo propertyId=\"60c1f8b565b7290ac6353627\" apiKey=\"1f7qr719r\" />\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}