{"version":3,"sources":["components/Optionnal.tsx","utils/FormSubmit.ts","pages/contact/ContactPage.tsx"],"names":["Optionnal","props","displayed","children","useFormSubmit","subject","destinationEmail","useState","succeeded","error","submitting","formState","setFormState","sendMail","data","fetch","method","headers","body","JSON","stringify","_subject","then","catch","handleSubmit","event","preventDefault","formData","FormData","target","forEach","value","key","Reflect","has","Array","isArray","push","toString","ContactPage","chatStatus","useStatus","state","className","md","variant","lg","onSubmit","Group","Control","name","placeholder","type","as","rows","disabled"],"mappings":"uHAAA,kDAMO,SAASA,EAAUC,GACxB,OACE,mCACGA,EAAMC,UAAYD,EAAME,SAAW,S,6FCDnC,SAASC,EAAcC,GAA2K,IAA1JC,EAAyJ,uDAA9H,mCAA8H,EACpKC,mBAA0B,CAC1DC,WAAW,EACXC,MAAO,GACPC,YAAY,IAJwL,mBAC/LC,EAD+L,KACpLC,EADoL,KAOtM,SAASC,EAASC,GAChBF,EAAa,2BAAKD,GAAN,IAAiBD,YAAY,KAEzCK,MAAM,8BAAgCT,EAAkB,CACtDU,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,OAAU,oBAEZC,KAAMC,KAAKC,UAAL,2BAAoBN,GAApB,IAA0BO,SAAUhB,OACzCiB,MAAK,WACNV,EAAa,2BAAKD,GAAN,IAAiBH,WAAW,EAAME,YAAY,QACzDa,OAAM,SAAAd,GACPG,EAAa,2BAAKD,GAAN,IAAiBF,MAAOA,EAAOC,YAAY,QAI3D,SAASc,EAAaC,GACpBA,EAAMC,iBAEN,IAAMC,EAAW,IAAIC,SAASH,EAAMI,QAEhCf,EAA0C,GAC9Ca,EAASG,SAAQ,SAACC,EAAOC,GAClBC,QAAQC,IAAIpB,EAAMkB,IAIlBG,MAAMC,QAAQtB,EAAKkB,MACtBlB,EAAKkB,GAAO,CAAClB,EAAKkB,KAEnBlB,EAAKkB,GAAkBK,KAAKN,EAAMO,aANjCxB,EAAKkB,GAAOD,EAAMO,cAStBzB,EAASC,GAGX,MAAO,CAACH,EAAWa,EAAcX,K,sKCoBpB0B,UAjEf,WACE,IAAMC,EAAaC,cACnB,EAA8BrC,YAAc,6BAA5C,mBAAOsC,EAAP,KAAclB,EAAd,KAEA,OACE,eAAC,IAAD,CAAWmB,UAAU,eAArB,UACE,cAAC,IAAD,CAAWzC,UAAWwC,EAAMlC,UAA5B,SACE,cAAC,IAAD,CAAKmC,UAAU,8BAAf,SACE,cAAC,IAAD,CAAKC,GAAI,GAAT,SACE,cAAC,IAAD,CAAOC,QAAQ,UAAf,4GAIN,eAAC,IAAD,CAAW3C,WAAYwC,EAAMlC,UAA7B,UACE,cAAC,IAAD,CAAKmC,UAAU,OAAf,SACE,eAAC,IAAD,WACE,yDACA,qJAGJ,cAAC,IAAD,CAAKA,UAAU,8BAAf,SACE,cAAC,IAAD,CAAKC,GAAI,EAAGE,GAAI,GAAhB,SACE,eAAC,IAAD,CAAMC,SAAUvB,EAAhB,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAKwB,MAAN,UACE,cAAC,IAAKC,QAAN,CAAcC,KAAK,MAAMC,YAAY,YAGzC,cAAC,IAAD,UACE,cAAC,IAAKH,MAAN,UACE,cAAC,IAAKC,QAAN,CAAcC,KAAK,SAASC,YAAY,qBAI9C,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAKH,MAAN,UACE,cAAC,IAAKC,QAAN,CAAcG,KAAK,QAAQF,KAAK,QAAQC,YAAY,yBAI1D,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAKH,MAAN,UACE,cAAC,IAAKC,QAAN,CAAcI,GAAG,WAAWH,KAAK,UAAUI,KAAM,EAAGH,YAAY,cAElE,cAAC,IAAD,CAAQR,UAAU,cAAcE,QAAQ,UAAUO,KAAK,SAASG,SAAUb,EAAMhC,WAAhF,iCAMV,cAAC,IAAD,CAAWR,UAA0B,WAAfsC,EAAtB,SACE,cAAC,IAAD,CAAKG,UAAU,OAAf,SACE,cAAC,IAAD,CAAKA,UAAU,OAAf,SACE","file":"static/js/6.90ffd049.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport interface OptionnalProps {\r\n  displayed: boolean\r\n}\r\n\r\nexport function Optionnal(props: React.PropsWithChildren<OptionnalProps>): JSX.Element {\r\n  return (\r\n    <>\r\n      {props.displayed ? props.children : null}\r\n    </>\r\n  );\r\n}","import { useState } from 'react';\r\n\r\ninterface FormSubmitState {\r\n  succeeded: boolean,\r\n  error: string,\r\n  submitting: boolean\r\n}\r\n\r\nexport function useFormSubmit(subject: string, destinationEmail: string = 'f4b1f3525078ed28a2659dbb69c5a942'): [FormSubmitState, (e: React.FormEvent<HTMLFormElement>) => void, (data: object) => void] {\r\n  const [formState, setFormState] = useState<FormSubmitState>({\r\n    succeeded: false,\r\n    error: '',\r\n    submitting: false\r\n  });\r\n\r\n  function sendMail(data: object): void {\r\n    setFormState({ ...formState, submitting: true });\r\n\r\n    fetch('https://formsubmit.co/ajax/' + destinationEmail, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      },\r\n      body: JSON.stringify({ ...data, _subject: subject })\r\n    }).then(() => {\r\n      setFormState({ ...formState, succeeded: true, submitting: false });\r\n    }).catch(error => {\r\n      setFormState({ ...formState, error: error, submitting: false });\r\n    });\r\n  }\r\n\r\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\r\n    event.preventDefault();\r\n\r\n    const formData = new FormData(event.target as HTMLFormElement);\r\n\r\n    let data: Record<string, string | string[]> = {};\r\n    formData.forEach((value, key) => {\r\n      if (!Reflect.has(data, key)) {\r\n        data[key] = value.toString();\r\n        return;\r\n      }\r\n      if (!Array.isArray(data[key])) {\r\n        data[key] = [data[key] as string];\r\n      }\r\n      (data[key] as string[]).push(value.toString());\r\n    });\r\n\r\n    sendMail(data);\r\n  }\r\n\r\n  return [formState, handleSubmit, sendMail];\r\n}","import React from 'react';\r\nimport { Container, Form, Button, Row, Col, Alert } from 'react-bootstrap';\r\nimport { Optionnal } from '../../components/Optionnal';\r\nimport { useStatus } from '../../components/TawkTo';\r\nimport { useFormSubmit } from '../../utils/FormSubmit';\r\nimport './ContactPage.scss';\r\n\r\nfunction ContactPage() {\r\n  const chatStatus = useStatus();\r\n  const [state, handleSubmit] = useFormSubmit('Message from contact page');\r\n\r\n  return (\r\n    <Container className=\"page contact\">\r\n      <Optionnal displayed={state.succeeded}>\r\n        <Row className=\"my-5 justify-content-center\">\r\n          <Col md={10}>\r\n            <Alert variant=\"success\">Merci pour votre message, nous vons répondrons par mail le plus rapidement possible !</Alert>\r\n          </Col>\r\n        </Row>\r\n      </Optionnal>\r\n      <Optionnal displayed={!state.succeeded}>\r\n        <Row className=\"mt-5\">\r\n          <Col>\r\n            <p>Vous avez une question ?</p>\r\n            <p>N'hésitez pas à nous envoyer un message, nous vons répondrons par e-mail le plus rapidement possible !</p>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center mt-3\">\r\n          <Col md={8} lg={10}>\r\n            <Form onSubmit={handleSubmit}>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Control name=\"nom\" placeholder=\"Nom\" />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Control name=\"prenom\" placeholder=\"Prénom\" />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Control type=\"email\" name=\"email\" placeholder=\"Adresse e-mail\" />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Control as=\"textarea\" name=\"message\" rows={5} placeholder=\"Message\" />\r\n                  </Form.Group>\r\n                  <Button className=\"float-right\" variant=\"primary\" type=\"submit\" disabled={state.submitting}>Envoyer</Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n        <Optionnal displayed={chatStatus === 'online'}>\r\n          <Row className=\"my-5\">\r\n            <Col className=\"my-5\">\r\n              <p>Vous pouvez aussi nous contacter en direct par chat, commencez une conversation en utilisant l'icone en bas à droite de la page.</p>\r\n            </Col>\r\n          </Row>\r\n        </Optionnal>\r\n      </Optionnal>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ContactPage;\r\n"],"sourceRoot":""}