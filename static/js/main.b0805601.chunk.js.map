{"version":3,"sources":["components/TawkTo.tsx","components/TopBar/TopBar.tsx","pages/home/HomePage.tsx","components/Optionnal.tsx","pages/products/racks/steps/StepGeneric.tsx","pages/products/racks/steps/StepValueTile.tsx","pages/products/racks/steps/StepMachine.tsx","pages/products/racks/steps/StepCapacity.tsx","pages/products/racks/steps/StepColor.tsx","pages/products/racks/steps/StepPrice.tsx","pages/products/racks/ConfigureRack.tsx","pages/products/racks/steps/StepPayment.tsx","pages/products/racks/steps/StepShipping.tsx","pages/products/racks/ConfigureShippingPayment.tsx","pages/products/racks/Racks.tsx","pages/products/ProductsPage.tsx","pages/contact/ContactPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["isApiReady","waitingForReady","logEvent","eventName","data","cb","window","Tawk_API","addEvent","push","TawkTo","props","useEffect","Tawk_LoadStart","Date","onLoad","forEach","s1","document","createElement","s0","getElementsByTagName","async","src","propertyId","apiKey","charset","setAttribute","parentNode","insertBefore","className","Topbar","Navbar","sticky","bg","variant","to","NavbarBrand","Nav","exact","Link","HomePage","Container","Row","Col","md","Image","thumbnail","alt","Optionnal","displayed","children","StepGeneric","stepClassName","expanded","onClick","onSelected","introLabel","typeLabel","valueLabel","undefined","priceLabel","StepValueTile","label","value","onSelect","price","MACHINES","Map","picture","StepMachine","useState","setValue","selectValue","onChange","onNext","machine","get","Array","from","key","val","CAPACITIES","StepCapacity","getPriceLabel","valueKey","COLORS","StepColor","StepPrice","total","getPartNumber","config","capacity","color","validConfiguration","getTotalPrice","Object","values","reduce","p","c","ConfigureRack","stepIndex","setStepIndex","product","setProduct","updateProduct","attribute","newProduct","onAdd","Button","PaymentModes","details","StepPayment","mode","setMode","getValueLabel","modeObj","Form","inline","ToggleButtonGroup","type","name","ToggleButton","ShippingModesByCountries","modes","none","mrelay_fr","laposte_fr","mrelay_be","laposte_be","mrelay_lu","laposte_lu","mrelay_de","laposte_de","mrelay_at","laposte_at","mrelay_es","laposte_es","mrelay_it","laposte_it","mrelay_nl","laposte_nl","mrelay_pt","laposte_pt","StepShipping","country","setCountry","availableModes","countryObj","InputGroup","Prepend","Text","Control","as","event","firstModeKey","keys","selectCountry","target","map","countryCode","shippingModes","selectMode","entries","id","ConfigureShippingPayment","shipping","payment","totalPrice","setConfig","updateConfig","newConfig","conf","fixAmount","basketTotal","basketCount","paymentMultiplier","Math","round","Racks","useRouteMatch","path","url","products","setProducts","shippingPayment","setShippingPayment","onAddProduct","getProductsPrice","index","newProducts","nbProducts","length","basket","join","totalProduct","onProductChange","some","prod","filter","size","block","ProductsPage","ContactPage","useForm","state","handleSubmit","succeeded","Alert","onSubmit","Group","placeholder","prefix","field","errors","rows","disabled","submitting","App","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"yTAOIA,GAAa,EACXC,EAAkC,GAWjC,SAASC,EAASC,EAAmBC,GAT5C,IAAaC,IAUP,WACFC,OAAOC,SAASC,SAASL,EAAWC,IAVlCJ,EACFK,IAGAJ,EAAgBQ,KAAKJ,GAUlB,SAASK,EAAOC,GAqBrB,OAjBAC,qBAAU,WACRN,OAAOC,SAAWD,OAAOC,UAAY,GACrCD,OAAOO,eAAiB,IAAIC,KAC5BR,OAAOC,SAASQ,OAAS,WACvBf,GAAa,EACbC,EAAgBe,SAAQ,SAAAX,GAAE,OAAIA,QAGhC,IAAIY,EAAKC,SAASC,cAAc,UAAWC,EAAKF,SAASG,qBAAqB,UAAU,GACxFJ,EAAGK,OAAQ,EACXL,EAAGM,IAAM,yBAA2BZ,EAAMa,WAAa,IAAMb,EAAMc,OACnER,EAAGS,QAAU,QACbT,EAAGU,aAAa,cAAe,KAC3BP,EAAGQ,YACLR,EAAGQ,WAAWC,aAAaZ,EAAIG,MAG5B,qBAAKU,UAAU,W,0CCnBTC,MAtBf,WACE,OACE,eAACC,EAAA,EAAD,CAAQF,UAAU,kBAAkBG,OAAO,MAAMC,GAAG,QAAQC,QAAQ,QAApE,UACE,cAAC,gBAAD,CAAeC,GAAG,IAAlB,SACE,cAACC,EAAA,EAAD,wBAGF,eAACC,EAAA,EAAD,CAAKR,UAAU,UAAf,UACE,cAAC,gBAAD,CAAeS,OAAK,EAACH,GAAG,IAAxB,SACE,cAACE,EAAA,EAAIE,KAAL,wBAEF,cAAC,gBAAD,CAAeJ,GAAG,YAAlB,SACE,cAACE,EAAA,EAAIE,KAAL,6BAEF,cAAC,gBAAD,CAAeD,OAAK,EAACH,GAAG,WAAxB,SACE,cAACE,EAAA,EAAIE,KAAL,sC,8BCQKC,MAxBf,WACE,OACE,eAACC,EAAA,EAAD,CAAWZ,UAAU,YAArB,UACE,cAACa,EAAA,EAAD,CAAKb,UAAU,gBAAf,SACE,eAACc,EAAA,EAAD,CAAKC,GAAI,GAAIf,UAAU,8BAAvB,UACE,qDACA,oBAAIA,UAAU,eAAd,iJAGJ,eAACa,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACC,EAAA,EAAD,CAAOvB,IAAI,gBAAgBwB,WAAS,EAACC,IAAI,wDAE3C,eAACJ,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,+DACA,iIACA,qEAAuC,gEAAvC,OAAsF,8DAAtF,2DACA,mH,uBCfH,SAASI,EAAUtC,GACxB,OACE,mCACGA,EAAMuC,UAAYvC,EAAMwC,SAAW,O,mBCUnC,SAASC,EAAYzC,GAC1B,OACE,cAACsC,EAAD,CAAWC,WAA+B,IAApBvC,EAAMuC,UAA5B,SACE,sBAAKpB,UAAW,QAAUnB,EAAM0C,cAAgB,wBAA0B1C,EAAM2C,SAAW,WAAa,sBAAxG,UACE,sBAAKxB,UAAW,qBAAuBnB,EAAM2C,SAAW,GAAK,YAAaC,QAAS5C,EAAM6C,WAAzF,UACE,sBAAM1B,UAAU,OAAhB,SAAwBnB,EAAM2C,SAAW3C,EAAM8C,WAAa9C,EAAM+C,UAAY,OADhF,OAEE,sBAAM5B,UAAU,mBAAhB,SAAoCnB,EAAM2C,SAAW,GAAK3C,EAAMgD,eAChE,cAACV,EAAD,CAAWC,WAAYvC,EAAM2C,eAAiCM,IAArBjD,EAAMkD,WAA/C,SAAyE,sBAAM/B,UAAU,oBAAhB,SAAqCnB,EAAMkD,WAAalD,EAAMkD,aAAe,UAExJ,cAACZ,EAAD,CAAWC,UAAWvC,EAAM2C,SAA5B,SACE,qBAAKxB,UAAU,qCAAf,SACGnB,EAAMwC,kBClBZ,SAASW,EAAcnD,GAC5B,IAAMoD,EAAQ,IAAMpD,EAAMoD,OAASpD,EAAMqD,OACzC,OACE,yBAAQlC,UAAU,SAASyB,QAAS,kBAAM5C,EAAMsD,SAAStD,EAAMqD,QAA/D,UACE,cAAClB,EAAA,EAAD,CAAOvB,IAAKZ,EAAMY,IAAKwB,WAAS,EAACC,IAAKe,IACtC,cAACd,EAAD,CAAWC,eAA2BU,IAAhBjD,EAAMuD,OAAuC,KAAhBvD,EAAMuD,MAAzD,SAAuE,sBAAMpC,UAAU,QAAhB,SAAyBnB,EAAMuD,UACtG,4BAAYpC,UAAU,iBAAtB,SAAwCiC,OCd9C,IAAMI,EAAW,IAAIC,IAAgD,CACnE,CAAC,SAAU,CAAEL,MAAO,6BAA8BM,QAAS,uBAC3D,CAAC,OAAQ,CAAEN,MAAO,2BAA4BM,QAAS,uBAOlD,SAASC,EAAY3D,GAC1B,MAA0B4D,mBAAiB,IAA3C,mBAAOP,EAAP,KAAcQ,EAAd,KAEA,SAASC,EAAYT,GACnBQ,EAASR,GACLrD,EAAM+D,UACR/D,EAAM+D,SAAS,CAACV,EAAO,IACrBrD,EAAMgE,QACRhE,EAAMgE,SAQV,OACE,cAACvB,EAAD,2BAAiBzC,GAAjB,IAAwB0C,cAAc,UAAUK,UAAU,UAAUD,WAAW,sBAAmBE,WANpG,WACE,IAAMiB,EAAUT,EAASU,IAAIb,GAC7B,OAAOY,EAAUA,EAAQb,MAAQ,IAIjC,SACGe,MAAMC,KAAKZ,GAAU,mCAAEa,EAAF,KAAOC,EAAP,YACpB,cAACnB,EAAD,CAAevC,IAAK,gBAAkB0D,EAAIZ,QAASN,MAAOkB,EAAIlB,MAAOC,MAAOgB,EAAKf,SAAUQ,GAAkB,WAAaO,SC3BlI,IAAME,EAAa,IAAId,IAA+B,CACpD,CAAC,KAAM,CAAEF,MAAO,KAChB,CAAC,KAAM,CAAEA,MAAO,KAChB,CAAC,KAAM,CAAEA,MAAO,OAOX,SAASiB,EAAaxE,GAC3B,MAA0B4D,mBAAiB,IAA3C,mBAAOP,EAAP,KAAcQ,EAAd,KAEA,SAASC,EAAYT,GACnB,IAAMiB,EAAMC,EAAWL,IAAIb,GACtBiB,IAELT,EAASR,GACLrD,EAAM+D,UACR/D,EAAM+D,SAAS,CAACV,EAAOiB,EAAIf,QACzBvD,EAAMgE,QACRhE,EAAMgE,UAOV,SAASS,IAAiD,IAAnCC,EAAkC,uDAAfrB,EAClCiB,EAAMC,EAAWL,IAAIQ,GAC3B,OAAOJ,EAAMA,EAAIf,MAAQ,SAAM,GAGjC,OACE,cAACd,EAAD,2BAAiBzC,GAAjB,IAAwB0C,cAAc,WAAWK,UAAU,cAAWD,WAAW,yBAAsBE,WAVzG,WACE,OAAOK,EAAQ,gBASmHH,WAAYuB,EAA9I,SACGN,MAAMC,KAAKG,GAAY,mCAAEF,EAAF,iBACtB,cAAClB,EAAD,CAAevC,IAAK,yBAA2ByD,EAAM,OAAQhB,MAAOgB,EAAKjB,MAAOiB,EAAM,eAAad,MAAOkB,EAAcJ,GAAMf,SAAUQ,GAAkB,MAAQO,SCrC1K,IAAMM,EAAS,IAAIlB,IAA8C,CAC/D,CAAC,QAAS,CAAEL,MAAO,QAASG,MAAO,IACnC,CAAC,QAAS,CAAEH,MAAO,OAAQG,MAAO,IAClC,CAAC,YAAa,CAAEH,MAAO,YAAaG,MAAO,IAC3C,CAAC,OAAQ,CAAEH,MAAO,OAAQG,MAAO,IACjC,CAAC,MAAO,CAAEH,MAAO,QAASG,MAAO,IACjC,CAAC,UAAW,CAAEH,MAAO,YAAaG,MAAO,IACzC,CAAC,gBAAiB,CAAEH,MAAO,iBAAkBG,MAAO,IACpD,CAAC,SAAU,CAAEH,MAAO,SAAUG,MAAO,IACrC,CAAC,aAAc,CAAEH,MAAO,cAAeG,MAAO,MAC9C,CAAC,cAAe,CAAEH,MAAO,cAAeG,MAAO,MAC/C,CAAC,aAAc,CAAEH,MAAO,cAAeG,MAAO,QAOzC,SAASqB,EAAU5E,GACxB,MAA0B4D,mBAAiB,IAA3C,mBAAOP,EAAP,KAAcQ,EAAd,KAEA,SAASC,EAAYT,GACnB,IAAMiB,EAAMK,EAAOT,IAAIb,GAClBiB,IAELT,EAASR,GACLrD,EAAM+D,UACR/D,EAAM+D,SAAS,CAACV,EAAOiB,EAAIf,QACzBvD,EAAMgE,QACRhE,EAAMgE,UAOV,SAASS,IAAiD,IAAnCC,EAAkC,uDAAfrB,EAClCiB,EAAMK,EAAOT,IAAIQ,GACvB,OAAOJ,GAAOA,EAAIf,MAAQ,EAAI,IAAMe,EAAIf,MAAQ,SAAM,GAGxD,OACE,cAACd,EAAD,2BAAiBzC,GAAjB,IAAwB0C,cAAc,QAAQK,UAAU,UAAUD,WAAW,qBAAqBE,WAVpG,WAAkC,IAAD,EAC/B,MAAO,cAAK2B,EAAOT,IAAIb,UAAhB,aAAK,EAAmBD,QAS8FF,WAAYuB,EAAzI,SACGN,MAAMC,KAAKO,GAAQ,mCAAEN,EAAF,KAAOC,EAAP,YAClB,cAACnB,EAAD,CAAevC,IAAK,sBAAwByD,EAAM,OAAQjB,MAAOkB,EAAIlB,MAAOG,MAAOkB,EAAcJ,GAAMhB,MAAOgB,EAAKf,SAAUQ,GAAkB,MAAQO,SCxCxJ,SAASQ,EAAU7E,GACxB,OACE,cAACyC,EAAD,CAAaF,UAAWvC,EAAMuC,UAAWI,UAAU,EAAOD,cAAc,QAAQK,UAAU,QAAQD,WAAW,GAAGE,WAAY,kBAAMhD,EAAM8E,MAAQ,YCa7I,SAASC,EAAcC,GAC5B,OAAOA,EAAOf,QAAQ,GAAK,IAAMe,EAAOC,SAAS,GAAK,IAAMD,EAAOE,MAAM,GAGpE,SAASC,EAAmBH,GACjC,MAA6B,KAAtBA,EAAOf,QAAQ,IAAoC,KAAvBe,EAAOC,SAAS,IAAiC,KAApBD,EAAOE,MAAM,GAGxE,SAASE,EAAcJ,GAC5B,OAAOK,OAAOC,OAAON,GAAQO,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,EAAE,KAAI,GAGnD,SAASC,EAAc1F,GAI5B,MAAkC4D,mBAAS,GAA3C,mBAAO+B,EAAP,KAAkBC,EAAlB,KACA,EAA8BhC,mBAxBvB,CACLK,QAAS,CAAC,GAAI,GACdgB,SAAU,CAAC,GAAI,GACfC,MAAO,CAAC,GAAI,KAqBd,mBAAOW,EAAP,KAAgBC,EAAhB,KAEA,SAASC,EAAcC,EAAoC3C,GACzD,IAAM4C,EAAU,2BAAQJ,GAAR,kBAAkBG,EAAY3C,IAC9CyC,EAAWG,GACXjG,EAAM+D,SAASkC,GAGjB,OACE,sBAAK9E,UAAU,yBAAf,UACE,sBAAKA,UAAU,uCAAf,UACE,cAACwC,EAAD,CAAahB,SAAwB,IAAdgD,EAAiB9C,WAAY,kBAAM+C,EAAa,IAAI5B,OAAQ,kBAAM4B,EAAa,IAAI7B,SAAU,SAAAO,GAAG,OAAIyB,EAAc,UAAWzB,MACpJ,cAACE,EAAD,CAAcjC,UAAWoD,GAAa,EAAGhD,SAAwB,IAAdgD,EAAiB9C,WAAY,kBAAM+C,EAAa,IAAI5B,OAAQ,kBAAM4B,EAAa,IAAI7B,SAAU,SAAAO,GAAG,OAAIyB,EAAc,WAAYzB,MACjL,cAACM,EAAD,CAAWrC,UAAWoD,GAAa,EAAGhD,SAAwB,IAAdgD,EAAiB9C,WAAY,kBAAM+C,EAAa,IAAI5B,OAAQ,kBAAM4B,EAAa,IAAI7B,SAAU,SAAAO,GAAG,OAAIyB,EAAc,QAASzB,MAC3K,cAACO,EAAD,CAAWtC,UAAyB,IAAdoD,EAAiBb,MAAOM,EAAcS,QAE9D,cAACvD,EAAD,CAAWC,UAAyB,IAAdoD,QAAmC1C,IAAhBjD,EAAMkG,MAA/C,SAAoE,cAACC,EAAA,EAAD,CAAQhF,UAAU,mBAAmBK,QAAQ,UAAUoB,QAAS5C,EAAMkG,MAAtE,4D,4BC9CpEE,EAAe,IAAI3C,IAAyB,CAChD,CAAC,YAAa,CAAEL,MAAO,oBAAqBiD,QAAS,wDAAgD9C,MAAO,IAC5G,CAAC,iBAAkB,CAAEH,MAAO,sBAAuBiD,QAAS,oDAAyC9C,MAAO,IAC5G,CAAC,eAAgB,CAAEH,MAAO,6BAA8BiD,QAAS,4EAAiE9C,MAAO,MAOpI,SAAS+C,EAAYtG,GAC1B,MAAwB4D,mBAAiB,IAAzC,mBAAO2C,EAAP,KAAaC,EAAb,KAeA,SAASC,EAAcnC,GACrB,IAAMoC,EAAUpC,GAAO8B,EAAalC,IAAIqC,GACxC,OAAKG,EAEEA,EAAQtD,MAFM,GAKvB,SAASqB,EAAcH,GACrB,IAAMoC,EAAUpC,GAAO8B,EAAalC,IAAIqC,GACxC,OAAKG,EAEEA,EAAQnD,MAAQ,EAAI,IAAMmD,EAAQnD,MAAQ,IAAM,UAFlC,GAKvB,OACE,cAACd,EAAD,2BAAiBzC,GAAjB,IAAwB0C,cAAc,UAAUK,UAAU,WAAWD,WAAW,mBAAmBE,WAAYyD,EAAevD,WAAYuB,EAA1I,SACE,cAACkC,EAAA,EAAD,CAAMC,QAAM,EAAZ,SACE,cAACC,EAAA,EAAD,CAAmB1F,UAAU,4BAA4B2F,KAAK,QAAQC,KAAK,UAAUhD,SA9B3F,SAAoBV,GAClB,IAAMqD,EAAUN,EAAalC,IAAIb,GAC5BqD,IAELF,EAAQnD,GAEJrD,EAAM+D,UACR/D,EAAM+D,SAAS,CAACV,EAAOqD,EAAQnD,QAE7BvD,EAAMgE,QACRhE,EAAMgE,WAoBJ,SACGG,MAAMC,KAAKgC,GAAc,mCAAE/B,EAAF,KAAOC,EAAP,YACxB,eAAC0C,EAAA,EAAD,CAAc7F,UAAU,mBAAmBkC,MAAOgB,EAAlD,UACE,sBAAMlD,UAAU,QAAhB,SAAyBsF,EAAcnC,KACvC,sBAAMnD,UAAU,aAAhB,SAA8BsD,EAAcH,KAC5C,sBAAMnD,UAAU,4BAAhB,SAA6CmD,EAAI+B,YAHS,OAAShC,a,YC9C3E4C,EAA2B,IAAIxD,IAAsE,CACzG,CAAC,KAAM,CACLL,MAAO,SAAU8D,MAAO,CACtBC,KAAM,CAAE/D,MAAO,uCAAqCG,MAAO,GAC3D6D,UAAW,CAAEhE,MAAO,gBAAiBG,MAAO,KAC5C8D,WAAY,CAAEjE,MAAO,mCAAoCG,MAAO,MAGpE,CAAC,KAAM,CACLH,MAAO,WAAY8D,MAAO,CACxBI,UAAW,CAAElE,MAAO,iBAAkBG,MAAO,KAC7CgE,WAAY,CAAEnE,MAAO,0BAA2BG,MAAO,OAG3D,CAAC,KAAM,CACLH,MAAO,aAAc8D,MAAO,CAC1BM,UAAW,CAAEpE,MAAO,gBAAiBG,MAAO,GAC5CkE,WAAY,CAAErE,MAAO,0BAA2BG,MAAO,OAG3D,CAAC,KAAM,CACLH,MAAO,YAAa8D,MAAO,CACzBQ,UAAW,CAAEtE,MAAO,gBAAiBG,MAAO,MAC5CoE,WAAY,CAAEvE,MAAO,0BAA2BG,MAAO,OAG3D,CAAC,KAAM,CACLH,MAAO,WAAY8D,MAAO,CACxBU,UAAW,CAAExE,MAAO,gBAAiBG,MAAO,IAC5CsE,WAAY,CAAEzE,MAAO,0BAA2BG,MAAO,OAG3D,CAAC,KAAM,CACLH,MAAO,UAAW8D,MAAO,CACvBY,UAAW,CAAE1E,MAAO,gBAAiBG,MAAO,GAC5CwE,WAAY,CAAE3E,MAAO,0BAA2BG,MAAO,OAG3D,CAAC,KAAM,CACLH,MAAO,SAAU8D,MAAO,CACtBc,UAAW,CAAE5E,MAAO,gBAAiBG,MAAO,IAC5C0E,WAAY,CAAE7E,MAAO,0BAA2BG,MAAO,OAG3D,CAAC,KAAM,CACLH,MAAO,WAAY8D,MAAO,CACxBgB,UAAW,CAAE9E,MAAO,gBAAiBG,MAAO,KAC5C4E,WAAY,CAAE/E,MAAO,0BAA2BG,MAAO,OAG3D,CAAC,KAAM,CACLH,MAAO,WAAY8D,MAAO,CACxBkB,UAAW,CAAEhF,MAAO,gBAAiBG,MAAO,IAC5C8E,WAAY,CAAEjF,MAAO,0BAA2BG,MAAO,SAStD,SAAS+E,EAAatI,GAA2B,IAAD,EACrD,EAA8B4D,mBAAiB,MAA/C,mBAAO2E,EAAP,KAAgBC,EAAhB,KACA,EAAwB5E,mBAAiB,aAAzC,mBAAO2C,EAAP,KAAaC,EAAb,KAmDA,IAAMiC,GAAiB,UAAAxB,EAAyB/C,IAAIqE,UAA7B,eAAuCrB,QAAS,GAEvE,OACE,cAACzE,EAAD,2BAAiBzC,GAAjB,IAAwB0C,cAAc,WAAWK,UAAU,gBAAaD,WAAW,uBAAoBE,WAvBzG,WACE,IAAM0F,EAAazB,EAAyB/C,IAAIqE,GAChD,IAAKG,EAAY,MAAO,GAExB,IAAMhC,EAAUgC,EAAWxB,MAAMX,GACjC,OAAKmC,EAEEhC,EAAQtD,MAFS,IAkB0GF,WAbpI,WACE,IAAMwF,EAAazB,EAAyB/C,IAAIqE,GAChD,IAAKG,EAAY,MAAO,GAExB,IAAMhC,EAAUgC,EAAWxB,MAAMX,GACjC,OAAKmC,EAEEhC,EAAQnD,MAAQ,EAAK,IAAMmD,EAAQnD,MAAQ,SAAO,UAFjC,IAQxB,SACE,eAACoD,EAAA,EAAD,CAAMC,QAAM,EAACzF,UAAU,4BAAvB,UACE,eAACwH,EAAA,EAAD,CAAYxH,UAAU,OAAtB,UACE,cAACwH,EAAA,EAAWC,QAAZ,UACE,cAACD,EAAA,EAAWE,KAAZ,oCAEF,cAAClC,EAAA,EAAKmC,QAAN,CAAcC,GAAG,SAAShF,SAAU,SAAAiF,GAAK,OA1DjD,SAAuB3F,GACrB,IAAMqF,EAAazB,EAAyB/C,IAAIb,GAChD,GAAKqF,EAAL,CAEA,IAAMO,EAAe5D,OAAO6D,KAAKR,EAAWxB,OAAO,GAEnDsB,EAAWnF,GACXmD,EAAQyC,GAEJjJ,EAAM+D,UACR/D,EAAM+D,SAAS,CAACkF,EAAcP,EAAWxB,MAAM+B,GAAc1F,SAgDZ4F,CAAcH,EAAMI,OAAO/F,QAAQA,MAAOkF,EAAvF,SACGpE,MAAMC,KAAK6C,GAA0BoC,KAAI,mCAAEC,EAAF,KAAeC,EAAf,YACxC,wBAAuClG,MAAOiG,EAA9C,SAA4DC,EAAcnG,OAA7D,WAAakG,WAIhC,eAACX,EAAA,EAAD,WACE,cAACA,EAAA,EAAWC,QAAZ,UACE,cAACD,EAAA,EAAWE,KAAZ,6BAEF,eAAClC,EAAA,EAAKmC,QAAN,CAAcC,GAAG,SAAShF,SAAU,SAAAiF,GAAK,OAvDjD,SAAoB3F,GAClB,IAAMqF,EAAazB,EAAyB/C,IAAIqE,GAChD,GAAKG,EAAL,CAEA,IAAMhC,EAAUgC,EAAWxB,MAAM7D,GAC5BqD,IAELF,EAAQnD,GAEJrD,EAAM+D,UACR/D,EAAM+D,SAAS,CAACV,EAAOqD,EAAQnD,QAE7BvD,EAAMgE,QACRhE,EAAMgE,WA0C2CwF,CAAWR,EAAMI,OAAO/F,QAAQA,MAAOkF,EAApF,UACE,wBAAQpH,UAAU,cAAlB,eACCkE,OAAOoE,QAAQhB,GAAgBY,KAAI,mCAAEK,EAAF,KAAMnD,EAAN,YAClC,yBAA2BlD,MAAOqG,EAAlC,UAAuCnD,EAAKnD,MAA5C,MAAsDmD,EAAKhD,MAA3D,WAAa,QAAUmG,YAI7B,cAAC/C,EAAA,EAAKkC,KAAN,CAAW1H,UAAU,yBAArB,4HCnID,SAASwI,EAAyB3J,GAKvC,MAAkC4D,mBAAS,GAA3C,mBAAO+B,EAAP,KAAkBC,EAAlB,KACA,EAA4BhC,mBAbrB,CACLgG,cAAU3G,EACV4G,aAAS5G,EACT6G,WAAY,IAUd,mBAAO9E,EAAP,KAAe+E,EAAf,KAEA,SAASC,EAAahE,EAA+C3C,GACnE,IAAM4G,EAAS,2BAAQjF,GAAR,kBAAiBgB,EAAY3C,IAC5C4G,EAAUH,WAAa1E,EAAc6E,GACrCF,EAAUE,GACVjK,EAAM+D,SAASkG,GAGjB,SAAS7E,IAAoE,IAAtD8E,EAAqD,uDAAhBlF,EAC1D,IAAKkF,EAAKN,WAAaM,EAAKL,QAAS,OAAO,EAE5C,IAAMM,EAAYnK,EAAMoK,YAAcF,EAAKN,SAAS,IAAM5J,EAAMqK,YAAc,GACxEC,EAAoB,EAAKJ,EAAKL,QAAQ,GAAK,IACjD,OAAOU,KAAKC,MAAML,EAAYG,EAAoB,IAAM,GAG1D,OACE,qBAAKnJ,UAAU,oCAAf,SACE,sBAAKA,UAAU,uCAAf,UACE,cAACmH,EAAD,CAAc3F,SAAwB,IAAdgD,EAAiB9C,WAAY,kBAAM+C,EAAa,IAAI5B,OAAQ,kBAAM4B,EAAa,IAAI7B,SAAU,SAAAO,GAAG,OAAI0F,EAAa,WAAY1F,MACrJ,cAACgC,EAAD,CAAa/D,UAAWoD,GAAa,EAAGhD,SAAwB,IAAdgD,EAAiB9C,WAAY,kBAAM+C,EAAa,IAAI5B,OAAQ,kBAAM4B,EAAa,IAAI7B,SAAU,SAAAO,GAAG,OAAI0F,EAAa,UAAW1F,MAC9K,cAACO,EAAD,CAAWtC,UAAyB,IAAdoD,EAAiBb,MAAOM,W,MC+CvCqF,MArFf,WAAkB,IAAD,EACKC,cADL,KACTC,KADS,EACHC,IAEoBhH,mBAA8B,CJIvD,CACLK,QAAS,CAAC,GAAI,GACdgB,SAAU,CAAC,GAAI,GACfC,MAAO,CAAC,GAAI,OIVC,mBAGR2F,EAHQ,KAGEC,EAHF,OAI+BlH,mBDDvC,CACLgG,cAAU3G,EACV4G,aAAS5G,EACT6G,WAAY,ICNC,mBAIRiB,EAJQ,KAISC,EAJT,KAoBf,SAASC,IACPH,EAAY,GAAD,mBAAKD,GAAL,CJdN,CACL5G,QAAS,CAAC,GAAI,GACdgB,SAAU,CAAC,GAAI,GACfC,MAAO,CAAC,GAAI,OIcd,SAASgG,EAAiBL,GACxB,OAAOA,EAAStF,QAAO,SAACC,EAAGK,GAAJ,OAAgBL,GAAKL,EAAmBU,GAAWT,EAAcS,GAAW,KAAI,GAuBzG,OACE,sBAAK1E,UAAU,aAAf,UACE,eAACa,EAAA,EAAD,CAAKb,UAAU,OAAf,UACE,cAACc,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACC,EAAA,EAAD,CAAOvB,IAAI,yBAAyBwB,WAAS,EAACC,IAAI,sDAEpD,eAACJ,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,0DACA,8DAAgC,gEAAhC,OAA+E,8DAA/E,2DACA,uHAGJ,cAACF,EAAA,EAAD,CAAKb,UAAU,OAAf,SACE,cAACc,EAAA,EAAD,UACG4I,EAASxB,KAAI,SAACxD,EAASsF,GAAV,OACZ,cAACzF,EAAD,CAAe3B,SAAU,SAAAmG,GAAI,OAzDvC,SAAyBiB,EAAetF,GACtC,IAAMuF,EAAW,YAAOP,GACxBO,EAAYD,GAAStF,EACrBiF,EAAYM,GAERjG,EAAmBU,IACrBtG,EAAS,gBAAiB,CACxB8L,WAAYD,EAAYE,OACxBC,OAAQH,EAAY/B,IAAItE,GAAeyG,KAAK,MAC5CC,aAAcP,EAAiBE,KAgDMM,CAAgBP,EAAOjB,IAAOhE,MAAO2E,EAASS,OAAS,IAAMH,EAAQF,OAAehI,GAAgB,UAAYkI,UAIvJ,eAAC7I,EAAD,CAAWC,UAAWsI,EAASc,MAAK,SAAAC,GAAI,OAAIzG,EAAmByG,MAA/D,UACE,cAAC5J,EAAA,EAAD,CAAKb,UAAU,YAAf,SACE,cAACc,EAAA,EAAD,UACE,cAAC0H,EAAD,CAA0BS,YAAac,EAAiBL,GAAWR,YAAaQ,EAASgB,QAAO,SAAArG,GAAC,OAAIL,EAAmBK,MAAI8F,OAAQvH,SA1C9I,SAA0BmG,GACxBc,EAAmBd,GAEnB3K,EAAS,iBAAkB,CACzBsL,SAAUA,EAASxB,IAAItE,GAAeyG,KAAK,MAC3C5B,SAAUM,EAAKN,SAAWM,EAAKN,SAAS,GAAK,GAC7CC,QAASK,EAAKL,QAAUK,EAAKL,QAAQ,GAAK,GAC1CC,WAAYI,EAAKJ,WAAa,kBAsC5B,cAACxH,EAAD,CAAWC,UAAWwI,EAAgBjB,WAAa,EAAnD,SACE,cAAC9H,EAAA,EAAD,CAAKb,UAAU,YAAf,SACE,cAACc,EAAA,EAAD,CAAKd,UAAU,cAAf,SACE,cAACgF,EAAA,EAAD,CAAQhF,UAAU,UAAUK,QAAQ,UAAUsK,KAAK,KAAKC,OAAK,EAACnJ,QArC1E,WACErD,EAAS,eAAgB,CACvBsL,SAAUA,EAASxB,IAAItE,GAAeyG,KAAK,MAC3C5B,SAAUmB,EAAgBnB,SAAWmB,EAAgBnB,SAAS,GAAK,GACnEC,QAASkB,EAAgBlB,QAAUkB,EAAgBlB,QAAQ,GAAK,GAChEC,WAAYiB,EAAgBjB,WAAa,YAgCjC,8C,MC7DCkC,MAlBf,WACE,IAAMrB,EAASD,cAATC,KAEN,OACE,cAAC5I,EAAA,EAAD,CAAWZ,UAAU,aAArB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOS,OAAK,EAAC+I,KAAMA,EAAnB,SAEE,cAAC,IAAD,CAAUlJ,GAAG,+BAEf,cAAC,IAAD,CAAOkJ,KAAI,UAAKA,EAAL,oBAAX,SACE,cAAC,EAAD,Y,wBCkDKsB,OA7Df,WAAwB,IAAD,EACSC,aAAQ,YADjB,mBACdC,EADc,KACPC,EADO,KAGrB,OACE,eAACrK,EAAA,EAAD,CAAWZ,UAAU,eAArB,UACE,cAACmB,EAAD,CAAWC,UAAW4J,EAAME,UAA5B,SACE,cAACrK,EAAA,EAAD,CAAKb,UAAU,iCAAf,SACE,cAACc,EAAA,EAAD,CAAKC,GAAI,GAAT,SACE,cAACoK,GAAA,EAAD,CAAO9K,QAAQ,UAAf,4GAIN,eAACc,EAAD,CAAWC,WAAY4J,EAAME,UAA7B,UACE,cAACrK,EAAA,EAAD,CAAKb,UAAU,OAAf,SACE,eAACc,EAAA,EAAD,CAAKC,GAAI,GAAT,UACE,yDACA,qJAGJ,cAACF,EAAA,EAAD,CAAKb,UAAU,4BAAf,SACE,cAACc,EAAA,EAAD,CAAKC,GAAI,EAAGf,UAAU,GAAtB,SACE,eAACwF,EAAA,EAAD,CAAM4F,SAAUH,EAAhB,UACE,eAACpK,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAAC0E,EAAA,EAAK6F,MAAN,WACE,cAAC7F,EAAA,EAAKmC,QAAN,CAAchC,KAAK,SAASC,KAAK,MAAM0F,YAAY,QACnD,cAAC,KAAD,CAAiBC,OAAO,MAAMC,MAAM,MAAMC,OAAQT,EAAMS,cAG5D,cAAC3K,EAAA,EAAD,UACE,eAAC0E,EAAA,EAAK6F,MAAN,WACE,cAAC7F,EAAA,EAAKmC,QAAN,CAAchC,KAAK,SAASC,KAAK,SAAS0F,YAAY,WACtD,cAAC,KAAD,CAAiBC,OAAO,SAASC,MAAM,SAASC,OAAQT,EAAMS,iBAIpE,cAAC5K,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAAC0E,EAAA,EAAK6F,MAAN,WACE,cAAC7F,EAAA,EAAKmC,QAAN,CAAchC,KAAK,QAAQC,KAAK,QAAQ0F,YAAY,mBACpD,cAAC,KAAD,CAAiBC,OAAO,QAAQC,MAAM,QAAQC,OAAQT,EAAMS,gBAIlE,cAAC5K,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAAC0E,EAAA,EAAK6F,MAAN,WACE,cAAC7F,EAAA,EAAKmC,QAAN,CAAcC,GAAG,WAAWhC,KAAK,UAAU8F,KAAM,EAAGJ,YAAY,YAChE,cAAC,KAAD,CAAiBC,OAAO,UAAUC,MAAM,UAAUC,OAAQT,EAAMS,gBAItE,cAACzG,EAAA,EAAD,CAAQ3E,QAAQ,UAAUsF,KAAK,SAASgG,SAAUX,EAAMY,WAAxD,mCCzBCC,OAxBf,WACE,OACE,eAACjL,EAAA,EAAD,CAAWZ,UAAU,MAArB,UACE,eAAC,gBAAD,CAAQ8L,SAAS,oBAAjB,UACE,cAAC,EAAD,IACA,qBAAK9L,UAAU,gBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOS,OAAK,EAAC+I,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAO/I,OAAK,EAAC+I,KAAK,WAAlB,SACE,cAAC,GAAD,cAKR,cAAC5K,EAAD,CAAQc,WAAW,2BAA2BC,OAAO,kBCd5CoM,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFtN,SAASuN,eAAe,SAM1BZ,O","file":"static/js/main.b0805601.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\n\r\ndeclare global {\r\n  var Tawk_API: any;\r\n  var Tawk_LoadStart: Date\r\n}\r\n\r\nlet isApiReady = false;\r\nconst waitingForReady: (() => void)[] = [];\r\n\r\nfunction run(cb: () => void): void {\r\n  if (isApiReady) {\r\n    cb();\r\n  }\r\n  else {\r\n    waitingForReady.push(cb);\r\n  }\r\n}\r\n\r\nexport function logEvent(eventName: string, data?: { [key: string]: string | number }): void {\r\n  run(() => {\r\n    window.Tawk_API.addEvent(eventName, data);\r\n  });\r\n}\r\n\r\nexport function TawkTo(props: {\r\n  propertyId: string,\r\n  apiKey: string\r\n}) {\r\n  useEffect(() => {\r\n    window.Tawk_API = window.Tawk_API || {};\r\n    window.Tawk_LoadStart = new Date();\r\n    window.Tawk_API.onLoad = function () {\r\n      isApiReady = true;\r\n      waitingForReady.forEach(cb => cb());\r\n    };\r\n\r\n    var s1 = document.createElement(\"script\"), s0 = document.getElementsByTagName(\"script\")[0];\r\n    s1.async = true;\r\n    s1.src = 'https://embed.tawk.to/' + props.propertyId + '/' + props.apiKey;\r\n    s1.charset = 'UTF-8';\r\n    s1.setAttribute('crossorigin', '*');\r\n    if (s0.parentNode)\r\n      s0.parentNode.insertBefore(s1, s0);\r\n  });\r\n\r\n  return <div className=\"tawkTo\" />;\r\n}","import React from 'react';\r\nimport { Navbar, NavbarBrand, Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport './TopBar.scss';\r\n\r\nfunction Topbar() {\r\n  return (\r\n    <Navbar className=\"topBarComponent\" sticky=\"top\" bg=\"light\" variant=\"light\">\r\n      <LinkContainer to=\"/\">\r\n        <NavbarBrand>ViPi 3D</NavbarBrand>\r\n      </LinkContainer>\r\n      \r\n      <Nav className=\"ml-auto\">\r\n        <LinkContainer exact to=\"/\">\r\n          <Nav.Link>Accueil</Nav.Link>\r\n        </LinkContainer>\r\n        <LinkContainer to=\"/produits\">\r\n          <Nav.Link>Nos produits</Nav.Link>\r\n        </LinkContainer>\r\n        <LinkContainer exact to=\"/contact\">\r\n          <Nav.Link>Nous contacter</Nav.Link>\r\n        </LinkContainer>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Topbar;\r\n","import React from 'react';\r\nimport { Container, Row, Col, Image } from 'react-bootstrap';\r\nimport './HomePage.scss';\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <Container className=\"page home\">\r\n      <Row className=\"about-us mt-5\">\r\n        <Col md={12} className=\"section-heading text-center\">\r\n          <h2>À propos de nous</h2>\r\n          <h3 className=\"my-5 mx-auto\">Passionné par le fait-main, nous concevons des objets pour la maison, souvent fabriqués à l'aide d'une imprimante 3D.</h3>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={7}>\r\n          <Image src=\"img/intro.jpg\" thumbnail alt=\"Support Philips Pasta Maker Avance 32 filières\" />\r\n        </Col>\r\n        <Col md={5}>\r\n          <h2>Les supports pour filières</h2>\r\n          <p>Notre plus grand succès aujourd'hui: un support pour filières pour machines à pâtes.</p>\r\n          <p>Il est disponible pour les machines <strong>Philips Pasta Maker Avance</strong> et <strong>Philips Pasta Maker Viva</strong>, en plusieurs capacités et en plusieurs couleurs.</p>\r\n          <p>De nouveaux modèles sont en préparation, restez à l'écoute !</p>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\n\r\nexport interface OptionnalProps {\r\n  displayed: boolean\r\n}\r\n\r\nexport function Optionnal(props: React.PropsWithChildren<OptionnalProps>): JSX.Element {\r\n  return (\r\n    <>\r\n      {props.displayed ? props.children : null}\r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport { Optionnal } from '../../../../components/Optionnal';\r\n\r\nexport interface MinimunStepGenericProps {\r\n  displayed?: boolean,\r\n  expanded: boolean,\r\n  onChange?: (value: [val: string, price: number]) => void,\r\n  onSelected?: () => void,\r\n  onNext?: () => void\r\n}\r\n\r\ninterface StepGenericProps extends MinimunStepGenericProps {\r\n  stepClassName: string\r\n  typeLabel: string\r\n  introLabel: string\r\n  valueLabel: () => string\r\n  priceLabel?: () => string\r\n}\r\n\r\nexport function StepGeneric(props: React.PropsWithChildren<StepGenericProps>) {\r\n  return (\r\n    <Optionnal displayed={props.displayed !== false}>\r\n      <div className={'step ' + props.stepClassName + ' border border-info ' + (props.expanded ? 'expanded' : 'collapsed bg-light')}>\r\n        <div className={'header py-2 px-2 ' + (props.expanded ? '' : 'bg-light')} onClick={props.onSelected}>\r\n          <span className=\"type\">{props.expanded ? props.introLabel : props.typeLabel + ' :'}</span>&nbsp;\r\n          <span className=\"value text-muted\">{props.expanded ? '' : props.valueLabel()}</span>\r\n          <Optionnal displayed={!props.expanded && props.priceLabel !== undefined}><span className=\"price float-right\">{props.priceLabel ? props.priceLabel() : ''}</span></Optionnal>\r\n        </div>\r\n        <Optionnal displayed={props.expanded}>\r\n          <div className=\"content border-top border-info p-2\">\r\n            {props.children}\r\n          </div>\r\n        </Optionnal>\r\n      </div>\r\n    </Optionnal>\r\n  );\r\n}","import React from 'react';\r\nimport { Image } from 'react-bootstrap';\r\nimport { Optionnal } from '../../../../components/Optionnal';\r\n\r\nexport interface StepValueTileProps {\r\n  label?: string\r\n  value: string\r\n  src: string\r\n  price?: string\r\n  onSelect: (value: string) => void\r\n}\r\n\r\nexport function StepValueTile(props: StepValueTileProps) {\r\n  const label = '' + (props.label || props.value);\r\n  return (\r\n    <figure className=\"figure\" onClick={() => props.onSelect(props.value)}>\r\n      <Image src={props.src} thumbnail alt={label} />\r\n      <Optionnal displayed={props.price !== undefined && props.price !== ''}><span className=\"price\">{props.price}</span></Optionnal>\r\n      <figcaption className=\"figure-caption\">{label}</figcaption>\r\n    </figure>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { MinimunStepGenericProps, StepGeneric } from './StepGeneric';\r\nimport { StepValueTile } from './StepValueTile';\r\n\r\nconst MACHINES = new Map<string, { label: string, picture: string }>([\r\n  ['avance', { label: 'Philips Pasta Maker Avance', picture: 'machine-avance.jpg' }],\r\n  ['viva', { label: 'Philips Pasta Maker Viva', picture: 'machine-viva.png' }],\r\n]);\r\n\r\ninterface StepMachineProps extends MinimunStepGenericProps {\r\n\r\n}\r\n\r\nexport function StepMachine(props: StepMachineProps) {\r\n  const [value, setValue] = useState<string>('');\r\n\r\n  function selectValue(value: string): void {\r\n    setValue(value);\r\n    if (props.onChange)\r\n      props.onChange([value, 0]);\r\n    if (props.onNext)\r\n      props.onNext();\r\n  }\r\n\r\n  function getValueLabel(): string {\r\n    const machine = MACHINES.get(value);\r\n    return machine ? machine.label : '';\r\n  }\r\n\r\n  return (\r\n    <StepGeneric {...props} stepClassName='machine' typeLabel='Machine' introLabel='Machine utilisée' valueLabel={getValueLabel}>\r\n      {Array.from(MACHINES, ([key, val]) =>\r\n        <StepValueTile src={'../img/racks/' + val.picture} label={val.label} value={key} onSelect={selectValue} key={'machine-' + key} />\r\n      )}\r\n    </StepGeneric>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { MinimunStepGenericProps, StepGeneric } from './StepGeneric';\r\nimport { StepValueTile } from './StepValueTile';\r\n\r\n\r\nconst CAPACITIES = new Map<string, { price: number }>([\r\n  ['16', { price: 18 }],\r\n  ['24', { price: 24 }],\r\n  ['32', { price: 32 }]\r\n]);\r\n\r\ninterface StepCapacityProps extends MinimunStepGenericProps {\r\n\r\n}\r\n\r\nexport function StepCapacity(props: StepCapacityProps) {\r\n  const [value, setValue] = useState<string>('');\r\n\r\n  function selectValue(value: string): void {\r\n    const val = CAPACITIES.get(value);\r\n    if (!val) return;\r\n    \r\n    setValue(value);\r\n    if (props.onChange)\r\n      props.onChange([value, val.price]);\r\n    if (props.onNext)\r\n      props.onNext();\r\n  }\r\n\r\n  function getValueLabel(): string {\r\n    return value + ' filières';\r\n  }\r\n\r\n  function getPriceLabel(valueKey: string = value): string {\r\n    const val = CAPACITIES.get(valueKey);\r\n    return val ? val.price + '€' : '';\r\n  }\r\n\r\n  return (\r\n    <StepGeneric {...props} stepClassName='capacity' typeLabel='Capacité' introLabel='Capacité du support' valueLabel={getValueLabel} priceLabel={getPriceLabel}>\r\n      {Array.from(CAPACITIES, ([key, val]) =>\r\n        <StepValueTile src={'../img/racks/capacity-' + key + '.png'} value={key} label={key + ' filières'} price={getPriceLabel(key)} onSelect={selectValue} key={'cap' + key} />\r\n      )}\r\n    </StepGeneric>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { MinimunStepGenericProps, StepGeneric } from './StepGeneric';\r\nimport { StepValueTile } from './StepValueTile';\r\n\r\nconst COLORS = new Map<string, { label: string, price: number }>([\r\n  ['white', { label: 'Blanc', price: 0 }],\r\n  ['black', { label: 'Noir', price: 1 }],\r\n  ['nightblue', { label: 'Bleu nuit', price: 1 }],\r\n  ['grey', { label: 'Gris', price: 1 }],\r\n  ['red', { label: 'Rouge', price: 1 }],\r\n  ['skyblue', { label: 'Bleu ciel', price: 2 }],\r\n  ['turquoiseblue', { label: 'Bleu turquoise', price: 2 }],\r\n  ['bronze', { label: 'Bronze', price: 3 }],\r\n  ['pastelblue', { label: 'Bleu pastel', price: 3.5 }],\r\n  ['pastelgreen', { label: 'Vert pastel', price: 3.5 }],\r\n  ['pastelpink', { label: 'Rose pastel', price: 3.5 }]\r\n]);\r\n\r\ninterface StepColorProps extends MinimunStepGenericProps {\r\n\r\n}\r\n\r\nexport function StepColor(props: StepColorProps) {\r\n  const [value, setValue] = useState<string>('');\r\n\r\n  function selectValue(value: string): void {\r\n    const val = COLORS.get(value);\r\n    if (!val) return;\r\n\r\n    setValue(value);\r\n    if (props.onChange)\r\n      props.onChange([value, val.price]);\r\n    if (props.onNext)\r\n      props.onNext();\r\n  }\r\n\r\n  function getValueLabel(): string {\r\n    return '' + COLORS.get(value)?.label;\r\n  }\r\n\r\n  function getPriceLabel(valueKey: string = value): string {\r\n    const val = COLORS.get(valueKey);\r\n    return val && val.price > 0 ? '+' + val.price + '€' : '';\r\n  }\r\n\r\n  return (\r\n    <StepGeneric {...props} stepClassName='color' typeLabel='Couleur' introLabel='Couleur du support' valueLabel={getValueLabel} priceLabel={getPriceLabel}>\r\n      {Array.from(COLORS, ([key, val]) =>\r\n        <StepValueTile src={'../img/racks/color-' + key + '.png'} label={val.label} price={getPriceLabel(key)} value={key} onSelect={selectValue} key={'col' + key} />\r\n      )}\r\n    </StepGeneric>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { StepGeneric } from './StepGeneric';\r\n\r\ninterface StepPriceProps {\r\n  displayed?: boolean\r\n  total: number\r\n}\r\n\r\nexport function StepPrice(props: StepPriceProps) {\r\n  return (\r\n    <StepGeneric displayed={props.displayed} expanded={false} stepClassName='price' typeLabel='Total' introLabel='' valueLabel={() => props.total + '€'}></StepGeneric>\r\n  );\r\n}\r\n","\r\nimport React, { useState } from 'react';\r\nimport { Optionnal } from '../../../components/Optionnal';\r\nimport { StepMachine } from './steps/StepMachine';\r\nimport { StepCapacity } from './steps/StepCapacity';\r\nimport { StepColor } from './steps/StepColor';\r\nimport { StepPrice } from './steps/StepPrice';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport interface RackConfiguration {\r\n  machine: [string, number],\r\n  capacity: [string, number],\r\n  color: [string, number]\r\n}\r\n\r\nexport function getNewConfiguration(): RackConfiguration {\r\n  return {\r\n    machine: ['', 0],\r\n    capacity: ['', 0],\r\n    color: ['', 0],\r\n  };\r\n}\r\n\r\nexport function getPartNumber(config: RackConfiguration): string {\r\n  return config.machine[0] + '-' + config.capacity[0] + '-' + config.color[0];\r\n}\r\n\r\nexport function validConfiguration(config: RackConfiguration): boolean {\r\n  return config.machine[0] !== '' && config.capacity[0] !== '' && config.color[0] !== '';\r\n}\r\n\r\nexport function getTotalPrice(config: RackConfiguration): number {\r\n  return Object.values(config).reduce((p, c) => p + c[1], 0);\r\n}\r\n\r\nexport function ConfigureRack(props: {\r\n  onChange: (conf: RackConfiguration) => void\r\n  onAdd?: () => void\r\n}) {\r\n  const [stepIndex, setStepIndex] = useState(0);\r\n  const [product, setProduct] = useState<RackConfiguration>(getNewConfiguration());\r\n\r\n  function updateProduct(attribute: keyof RackConfiguration, value: [string, number]) {\r\n    const newProduct = { ...product, [attribute]: value };\r\n    setProduct(newProduct);\r\n    props.onChange(newProduct);\r\n  }\r\n\r\n  return (\r\n    <div className=\"configureRack clearfix\">\r\n      <div className=\"myAccordion w-100 border border-info\">\r\n        <StepMachine expanded={stepIndex === 0} onSelected={() => setStepIndex(0)} onNext={() => setStepIndex(1)} onChange={val => updateProduct('machine', val)} />\r\n        <StepCapacity displayed={stepIndex >= 1} expanded={stepIndex === 1} onSelected={() => setStepIndex(1)} onNext={() => setStepIndex(2)} onChange={val => updateProduct('capacity', val)} />\r\n        <StepColor displayed={stepIndex >= 2} expanded={stepIndex === 2} onSelected={() => setStepIndex(2)} onNext={() => setStepIndex(3)} onChange={val => updateProduct('color', val)} />\r\n        <StepPrice displayed={stepIndex === 3} total={getTotalPrice(product)} />\r\n      </div>\r\n      <Optionnal displayed={stepIndex === 3 && props.onAdd !== undefined}><Button className=\"my-2 float-right\" variant=\"primary\" onClick={props.onAdd}>Ajouter un autre support à ma commande</Button></Optionnal>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { Form, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\r\nimport { MinimunStepGenericProps, StepGeneric } from './StepGeneric';\r\n\r\ninterface PaymentMode {\r\n  label: string,\r\n  details: string,\r\n  price: number\r\n}\r\n\r\nconst PaymentModes = new Map<string, PaymentMode>([\r\n  ['transfert', { label: 'Virement bancaire', details: 'Paiement en quelques jours, sûr et sécurisé.', price: 0 }],\r\n  ['paypal_friends', { label: 'Paypal - entre amis', details: 'Paiement instantané, sûr et sécurisé.', price: 0 }],\r\n  ['paypal_goods', { label: 'Paypal  - biens & services', details: 'Paiement instantané, sûr et sécurisé avec assurance acheteur.', price: 5 }],\r\n]);\r\n\r\ninterface StepPaymentProps extends MinimunStepGenericProps {\r\n\r\n}\r\n\r\nexport function StepPayment(props: StepPaymentProps) {\r\n  const [mode, setMode] = useState<string>('');\r\n\r\n  function selectMode(value: string): void {\r\n    const modeObj = PaymentModes.get(value);\r\n    if (!modeObj) return;\r\n\r\n    setMode(value);\r\n\r\n    if (props.onChange)\r\n      props.onChange([value, modeObj.price]);\r\n\r\n    if (props.onNext)\r\n      props.onNext();\r\n  }\r\n\r\n  function getValueLabel(val?: PaymentMode): string {\r\n    const modeObj = val || PaymentModes.get(mode);\r\n    if (!modeObj) return '';\r\n\r\n    return modeObj.label;\r\n  }\r\n\r\n  function getPriceLabel(val?: PaymentMode): string {\r\n    const modeObj = val || PaymentModes.get(mode);\r\n    if (!modeObj) return '';\r\n\r\n    return modeObj.price > 0 ? '+' + modeObj.price + '%' : 'Gratuit';\r\n  }\r\n\r\n  return (\r\n    <StepGeneric {...props} stepClassName='payment' typeLabel='Paiement' introLabel=\"Mode de paiement\" valueLabel={getValueLabel} priceLabel={getPriceLabel}>\r\n      <Form inline>\r\n        <ToggleButtonGroup className=\"justify-content-md-center\" type=\"radio\" name=\"options\" onChange={selectMode}>\r\n          {Array.from(PaymentModes, ([key, val]) =>\r\n            <ToggleButton className=\"flex-column px-4\" value={key} key={'pay-' + key}>\r\n              <span className=\"title\">{getValueLabel(val)}</span>\r\n              <span className=\"price mb-2\">{getPriceLabel(val)}</span>\r\n              <span className=\"details font-weight-light\">{val.details}</span>\r\n            </ToggleButton>\r\n          )}\r\n        </ToggleButtonGroup>\r\n      </Form>\r\n    </StepGeneric>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Form, InputGroup } from 'react-bootstrap';\r\nimport { MinimunStepGenericProps, StepGeneric } from './StepGeneric';\r\n\r\ninterface ShippingMode {\r\n  label: string,\r\n  price: number\r\n}\r\n\r\nconst ShippingModesByCountries = new Map<string, { label: string, modes: { [id: string]: ShippingMode } }>([\r\n  ['fr', {\r\n    label: 'France', modes: {\r\n      none: { label: 'En main propre à Gentilly (94250)', price: 0 },\r\n      mrelay_fr: { label: 'Mondial Relay', price: 5.5 },\r\n      laposte_fr: { label: 'Colissimo - Livraison en 2 jours', price: 9 }\r\n    }\r\n  }],\r\n  ['be', {\r\n    label: 'Belgique', modes: {\r\n      mrelay_be: { label: 'Mondial Relay ', price: 5.5 },\r\n      laposte_be: { label: 'Colissimo International', price: 17 }\r\n    }\r\n  }],\r\n  ['lu', {\r\n    label: 'Luxembourg', modes: {\r\n      mrelay_lu: { label: 'Mondial Relay', price: 6 },\r\n      laposte_lu: { label: 'Colissimo International', price: 17 }\r\n    }\r\n  }],\r\n  ['de', {\r\n    label: 'Allemagne', modes: {\r\n      mrelay_de: { label: 'Mondial Relay', price: 10.5 },\r\n      laposte_de: { label: 'Colissimo International', price: 17 }\r\n    }\r\n  }],\r\n  ['at', {\r\n    label: 'Autriche', modes: {\r\n      mrelay_at: { label: 'Mondial Relay', price: 12 },\r\n      laposte_at: { label: 'Colissimo International', price: 17 }\r\n    }\r\n  }],\r\n  ['es', {\r\n    label: 'Espagne', modes: {\r\n      mrelay_es: { label: 'Mondial Relay', price: 8 },\r\n      laposte_es: { label: 'Colissimo International', price: 17 }\r\n    }\r\n  }],\r\n  ['it', {\r\n    label: 'Italie', modes: {\r\n      mrelay_it: { label: 'Mondial Relay', price: 12 },\r\n      laposte_it: { label: 'Colissimo International', price: 17 }\r\n    }\r\n  }],\r\n  ['nl', {\r\n    label: 'Pays Bas', modes: {\r\n      mrelay_nl: { label: 'Mondial Relay', price: 6.6 },\r\n      laposte_nl: { label: 'Colissimo International', price: 17 }\r\n    }\r\n  }],\r\n  ['pt', {\r\n    label: 'Portugal', modes: {\r\n      mrelay_pt: { label: 'Mondial Relay', price: 12 },\r\n      laposte_pt: { label: 'Colissimo International', price: 17 }\r\n    }\r\n  }],\r\n]);\r\n\r\ninterface StepShippingProps extends MinimunStepGenericProps {\r\n\r\n}\r\n\r\nexport function StepShipping(props: StepShippingProps) {\r\n  const [country, setCountry] = useState<string>('fr');\r\n  const [mode, setMode] = useState<string>('mrelay_fr');\r\n\r\n  function selectCountry(value: string): void {\r\n    const countryObj = ShippingModesByCountries.get(value);\r\n    if (!countryObj) return;\r\n\r\n    const firstModeKey = Object.keys(countryObj.modes)[0];\r\n\r\n    setCountry(value);\r\n    setMode(firstModeKey);\r\n\r\n    if (props.onChange)\r\n      props.onChange([firstModeKey, countryObj.modes[firstModeKey].price]);\r\n  }\r\n\r\n  function selectMode(value: string): void {\r\n    const countryObj = ShippingModesByCountries.get(country);\r\n    if (!countryObj) return;\r\n\r\n    const modeObj = countryObj.modes[value];\r\n    if (!modeObj) return;\r\n\r\n    setMode(value);\r\n\r\n    if (props.onChange)\r\n      props.onChange([value, modeObj.price]);\r\n\r\n    if (props.onNext)\r\n      props.onNext();\r\n  }\r\n\r\n  function getValueLabel(): string {\r\n    const countryObj = ShippingModesByCountries.get(country);\r\n    if (!countryObj) return '';\r\n\r\n    const modeObj = countryObj.modes[mode];\r\n    if (!countryObj) return '';\r\n\r\n    return modeObj.label;\r\n  }\r\n\r\n  function getPriceLabel(): string {\r\n    const countryObj = ShippingModesByCountries.get(country);\r\n    if (!countryObj) return '';\r\n\r\n    const modeObj = countryObj.modes[mode];\r\n    if (!countryObj) return '';\r\n\r\n    return modeObj.price > 0 ? ('+' + modeObj.price + '€') : 'Gratuit';\r\n  }\r\n\r\n  const availableModes = ShippingModesByCountries.get(country)?.modes || {};\r\n\r\n  return (\r\n    <StepGeneric {...props} stepClassName='shipping' typeLabel='Expédition' introLabel=\"Mode d'expédition\" valueLabel={getValueLabel} priceLabel={getPriceLabel}>\r\n      <Form inline className=\"justify-content-md-center\">\r\n        <InputGroup className=\"mr-3\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>Pays de destination</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Form.Control as=\"select\" onChange={event => selectCountry(event.target.value)} value={country}>\r\n            {Array.from(ShippingModesByCountries).map(([countryCode, shippingModes]) =>\r\n              <option key={'country-' + countryCode} value={countryCode}>{shippingModes.label}</option>\r\n            )}\r\n          </Form.Control>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>Mode d'envoi</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Form.Control as=\"select\" onChange={event => selectMode(event.target.value)} value={country}>\r\n            <option className=\"placeholder\">-</option>\r\n            {Object.entries(availableModes).map(([id, mode]) =>\r\n              <option key={'mode-' + id} value={id}>{mode.label} - {mode.price}€</option>\r\n            )}\r\n          </Form.Control>\r\n        </InputGroup>\r\n        <Form.Text className=\"text-muted float-right\">\r\n          Les supports supplémentaires au premier seront envoyés dans le même colis pour 1€ de plus.\r\n        </Form.Text>\r\n      </Form>\r\n    </StepGeneric>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { StepPayment } from \"./steps/StepPayment\";\r\nimport { StepPrice } from \"./steps/StepPrice\";\r\nimport { StepShipping } from \"./steps/StepShipping\";\r\n\r\nexport interface ShippingPaymentConfiguration {\r\n  shipping: undefined | [string, number],\r\n  payment: undefined | [string, number],\r\n  totalPrice: number\r\n}\r\n\r\nexport function getNewConfiguration(): ShippingPaymentConfiguration {\r\n  return {\r\n    shipping: undefined,\r\n    payment: undefined,\r\n    totalPrice: 0\r\n  };\r\n}\r\n\r\nexport function ConfigureShippingPayment(props: {\r\n  basketTotal: number,\r\n  basketCount: number,\r\n  onChange: (conf: ShippingPaymentConfiguration) => void\r\n}) {\r\n  const [stepIndex, setStepIndex] = useState(0);\r\n  const [config, setConfig] = useState<ShippingPaymentConfiguration>(getNewConfiguration());\r\n\r\n  function updateConfig(attribute: keyof ShippingPaymentConfiguration, value: [string, number]) {\r\n    const newConfig = { ...config, [attribute]: value };\r\n    newConfig.totalPrice = getTotalPrice(newConfig);\r\n    setConfig(newConfig);\r\n    props.onChange(newConfig);\r\n  }\r\n\r\n  function getTotalPrice(conf: ShippingPaymentConfiguration = config): number {\r\n    if (!conf.shipping || !conf.payment) return 0;\r\n\r\n    const fixAmount = props.basketTotal + conf.shipping[1] + (props.basketCount - 1);\r\n    const paymentMultiplier = 1 + (conf.payment[1] / 100);\r\n    return Math.round(fixAmount * paymentMultiplier * 10) / 10;\r\n  }\r\n\r\n  return (\r\n    <div className=\"configureShippingPayment clearfix\">\r\n      <div className=\"myAccordion w-100 border border-info\">\r\n        <StepShipping expanded={stepIndex === 0} onSelected={() => setStepIndex(0)} onNext={() => setStepIndex(1)} onChange={val => updateConfig('shipping', val)} />\r\n        <StepPayment displayed={stepIndex >= 1} expanded={stepIndex === 1} onSelected={() => setStepIndex(1)} onNext={() => setStepIndex(2)} onChange={val => updateConfig('payment', val)} />\r\n        <StepPrice displayed={stepIndex === 2} total={getTotalPrice()} />\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { Row, Col, Image, Button } from 'react-bootstrap';\r\nimport { Route, Switch, Redirect, useRouteMatch } from 'react-router';\r\nimport { Optionnal } from '../../../components/Optionnal';\r\nimport { logEvent } from '../../../components/TawkTo';\r\nimport { ConfigureRack, getNewConfiguration as rGetNewConfiguration, validConfiguration, RackConfiguration, getTotalPrice, getPartNumber } from './ConfigureRack';\r\nimport { ConfigureShippingPayment, getNewConfiguration as spGetNewConfiguration, ShippingPaymentConfiguration } from './ConfigureShippingPayment';\r\nimport './Racks.scss';\r\n\r\nfunction Racks() {\r\n  let { path, url } = useRouteMatch();\r\n\r\n  const [products, setProducts] = useState<RackConfiguration[]>([rGetNewConfiguration()]);\r\n  const [shippingPayment, setShippingPayment] = useState<ShippingPaymentConfiguration>(spGetNewConfiguration());\r\n\r\n  function onProductChange(index: number, product: RackConfiguration) {\r\n    const newProducts = [...products];\r\n    newProducts[index] = product;\r\n    setProducts(newProducts);\r\n\r\n    if (validConfiguration(product)) {\r\n      logEvent('productChange', {\r\n        nbProducts: newProducts.length,\r\n        basket: newProducts.map(getPartNumber).join(', '),\r\n        totalProduct: getProductsPrice(newProducts)\r\n      });\r\n    }\r\n  }\r\n\r\n  function onAddProduct() {\r\n    setProducts([...products, rGetNewConfiguration()]);\r\n  }\r\n\r\n  function getProductsPrice(products: RackConfiguration[]): number {\r\n    return products.reduce((p, product) => p + (validConfiguration(product) ? getTotalPrice(product) : 0), 0);\r\n  }\r\n\r\n  function onShippingChange(conf: ShippingPaymentConfiguration) {\r\n    setShippingPayment(conf);\r\n\r\n    logEvent('shippingChange', {\r\n      products: products.map(getPartNumber).join(', '),\r\n      shipping: conf.shipping ? conf.shipping[0] : '',\r\n      payment: conf.payment ? conf.payment[0] : '',\r\n      totalPrice: conf.totalPrice + '€'\r\n    });\r\n  }\r\n\r\n  function confirmOrder() {\r\n    logEvent('confirmOrder', {\r\n      products: products.map(getPartNumber).join(', '),\r\n      shipping: shippingPayment.shipping ? shippingPayment.shipping[0] : '',\r\n      payment: shippingPayment.payment ? shippingPayment.payment[0] : '',\r\n      totalPrice: shippingPayment.totalPrice + '€'\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"orderRacks\">\r\n      <Row className=\"mt-4\">\r\n        <Col md={5}>\r\n          <Image src=\"../img/racks/racks.jpg\" thumbnail alt=\"Support pour filières de Philips Pasta Maker\" />\r\n        </Col>\r\n        <Col md={7}>\r\n          <h2>Support pour filières</h2>\r\n          <p>Disponible pour les machines <strong>Philips Pasta Maker Avance</strong> et <strong>Philips Pasta Maker Viva</strong>, en plusieurs capacités et en plusieurs couleurs.</p>\r\n          <p>Faites vos choix pour configurer votre support puis passez commande ici-même.</p>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mt-3\">\r\n        <Col>\r\n          {products.map((product, index) =>\r\n            <ConfigureRack onChange={conf => onProductChange(index, conf)} onAdd={products.length - 1 === index ? onAddProduct : undefined} key={'product' + index} />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Optionnal displayed={products.some(prod => validConfiguration(prod))}>\r\n        <Row className=\"mt-3 mb-4\">\r\n          <Col>\r\n            <ConfigureShippingPayment basketTotal={getProductsPrice(products)} basketCount={products.filter(p => validConfiguration(p)).length} onChange={onShippingChange} />\r\n          </Col>\r\n        </Row>\r\n        <Optionnal displayed={shippingPayment.totalPrice > 0}>\r\n          <Row className=\"mt-3 mb-5\">\r\n            <Col className=\"text-center\">\r\n              <Button className=\"mx-auto\" variant=\"primary\" size=\"lg\" block onClick={confirmOrder}>Valider ma commande</Button>\r\n            </Col>\r\n          </Row>\r\n        </Optionnal>\r\n      </Optionnal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Racks;\r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Route, Switch, Redirect, useRouteMatch } from 'react-router';\r\nimport Racks from './racks/Racks';\r\nimport './ProductsPage.scss';\r\n\r\nfunction ProductsPage() {\r\n  let { path } = useRouteMatch();\r\n\r\n  return (\r\n    <Container className=\"page order\">\r\n      <Switch>\r\n        <Route exact path={path}>\r\n          {/* Create a page that let user pick a type of product */}\r\n          <Redirect to='produits/supportFilieres' />\r\n        </Route>\r\n        <Route path={`${path}/supportFilieres`}>\r\n          <Racks />\r\n        </Route>\r\n      </Switch>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ProductsPage;\r\n","import React from 'react';\r\nimport { useForm, ValidationError } from '@formspree/react';\r\nimport { Container, Form, Button, Row, Col, Alert } from 'react-bootstrap';\r\nimport { Optionnal } from '../../components/Optionnal';\r\nimport './ContactPage.scss';\r\n\r\nfunction ContactPage() {\r\n  const [state, handleSubmit] = useForm(\"mayajjrq\");\r\n\r\n  return (\r\n    <Container className=\"page contact\">\r\n      <Optionnal displayed={state.succeeded}>\r\n        <Row className=\"my-5 justify-content-md-center\">\r\n          <Col md={10}>\r\n            <Alert variant=\"success\">Merci pour votre message, nous vons répondrons par mail le plus rapidement possible !</Alert>\r\n          </Col>\r\n        </Row>\r\n      </Optionnal>\r\n      <Optionnal displayed={!state.succeeded}>\r\n        <Row className=\"my-5\">\r\n          <Col md={12}>\r\n            <p>Vous avez une question ?</p>\r\n            <p>N'hésitez pas à nous envoyer un message, nous vons répondrons par e-mail le plus rapidement possible !</p>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md={8} className=\"\">\r\n            <Form onSubmit={handleSubmit}>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Control type=\"string\" name=\"nom\" placeholder=\"Nom\" />\r\n                    <ValidationError prefix=\"Nom\" field=\"nom\" errors={state.errors} />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Control type=\"string\" name=\"prenom\" placeholder=\"Prenom\" />\r\n                    <ValidationError prefix=\"Prenom\" field=\"prenom\" errors={state.errors} />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Control type=\"email\" name=\"email\" placeholder=\"Adresse e-mail\" />\r\n                    <ValidationError prefix=\"Email\" field=\"email\" errors={state.errors} />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Control as=\"textarea\" name=\"message\" rows={5} placeholder=\"Message\" />\r\n                    <ValidationError prefix=\"Message\" field=\"message\" errors={state.errors} />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Button variant=\"primary\" type=\"submit\" disabled={state.submitting}>Envoyer</Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Optionnal>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ContactPage;\r\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { TawkTo } from './components/TawkTo';\nimport TopBar from './components/TopBar/TopBar';\nimport HomePage from './pages/home/HomePage';\nimport OrderPage from './pages/products/ProductsPage';\nimport ContactPage from './pages/contact/ContactPage';\n\nfunction App() {\n  return (\n    <Container className=\"app\">\n      <Router basename=\"/vipi3dSellerPage\">\n        <TopBar />\n        <div className=\"pageContainer\">\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route path=\"/produits\">\n              <OrderPage />\n            </Route>\n            <Route exact path=\"/contact\">\n              <ContactPage />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n      <TawkTo propertyId=\"60c1f8b565b7290ac6353627\" apiKey=\"1f7qr719r\" />\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}